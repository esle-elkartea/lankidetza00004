package net.idtoki.serteca.controller;

import java.io.IOException;
import java.util.logging.Logger;

import javax.servlet.ServletException;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import org.apache.torque.util.Criteria;

import net.idtoki.serteca.group.LocalidadGroupBean;
import net.idtoki.serteca.helper.ClienteHelper;
import net.idtoki.serteca.helper.LocalidadHelper;
import net.idtoki.serteca.helper.TrabajadorHelper;
import net.idtoki.serteca.manager.LocalidadManager;
import net.idtoki.serteca.model.LocalidadPeer;
import net.zylk.tools.ajax.AjaxUtils;
import net.zylk.tools.ajax.AjaxUtils.DinamicGridBean;
import net.zylk.web.WebUtils;

/**
 * The skeleton for this class was autogenerated by Torque on:
 *
 * [Wed Feb 01 12:46:43 CET 2006]
 *
 *  You should add additional methods to this class to meet the
 *  application requirements.  This class will only be generated as
 *  long as it does not already exist in the output directory.
 */
public class LocalidadController
    extends net.idtoki.serteca.controller.BaseLocalidadController
{
 private static final Logger logger = Logger.getLogger("net.idtoki.serteca.controller.LocalidadController");

 public void init()
 {
  super.init();
  //Aqui se registran los metodos que no se quieran repetir de otros sitios.
  //por ejemplo igual quieres tener los metodos de generacion de ajax
  // en un paquete aparte y no copiarlos por aqui,  sino tenerlos disponibles
  //para todas las aplicaciones sin repetirlos en todos los sitios, pues los registras
  //y punto!!
 }
 
 public void serviceLocalidadTableContent(HttpServletRequest request, HttpServletResponse response) throws IOException, ServletException
 {
  utf8RequestService(request);
  DinamicGridBean dgb = WebUtils.getDinamicGridBeanParam(request,14,7);
  Criteria c = LocalidadManager.buildSearchCriteria(dgb);
  
  	String CampoOrdenacion = "";
	CampoOrdenacion =   WebUtils.getStringParam(request, "sort_col");
	
	String OrdenOrdenacion = "";
	OrdenOrdenacion = WebUtils.getStringParam(request, "sort_dir");
   
	if((OrdenOrdenacion != null )&& (OrdenOrdenacion.compareTo("ASC")==0))
		if ((CampoOrdenacion != null)) //&& (CampoOrdenacion.compareTo("nombre")==0))
		{
			c.addAscendingOrderByColumn(LocalidadPeer.TABLE_NAME + "." + CampoOrdenacion.toString().toUpperCase());
		 //c.addAscendingOrderByColumn(LocalidadPeer.NOMBRE);
		}
	if  ((OrdenOrdenacion != null) && (OrdenOrdenacion.compareTo("DESC")==0))
		if ((CampoOrdenacion != null)) //&& (CampoOrdenacion.compareTo("nombre")==0))
			{
			//c.addDescendingOrderByColumn(LocalidadPeer.NOMBRE);
			c.addDescendingOrderByColumn(LocalidadPeer.TABLE_NAME + "." + CampoOrdenacion.toString().toUpperCase());
		}


System.out.println("El criterio es ---->" + c.toString());
  //resultado de la consulta lo guardamos en un TrabajadorGroupBean
  LocalidadGroupBean tgb = LocalidadManager.getLocalidads(c);
  logger.info("El tamaño es ---->" + tgb.getTotalSize());
  dgb.setTotalSize(tgb.getTotalSize());
  

  String[] methodos= new String[] {	
		    LocalidadHelper.ID_GET_METHOD_NAME,
		  	LocalidadHelper.NOMBRE_GET_METHOD_NAME+"LocalidadParsed",
		  	LocalidadHelper.PROVINCIA_ID_GET_METHOD_NAME+"LocalidadParsed"
			};
  
  xmlResponseService(response,AjaxUtils.buildXmlAjaxResponseTableContentFromListObj(
		  										tgb.getAlmacen(),
		  										methodos,
		  										LocalidadHelper.ID_GET_METHOD_NAME, dgb,"ISO-8859-1"));
 }
 
 public void serviceLocalidadUlContent(HttpServletRequest request, HttpServletResponse response) throws IOException, ServletException
 {
	 utf8RequestService(request);
	 String[] methodos= new String[] {
			 LocalidadHelper.ID_GET_METHOD_NAME,
			 LocalidadHelper.NOMBRE_GET_METHOD_NAME+"LocalidadParsed"
			 };

	 String param =  WebUtils.getStringParam(request, "value");
	 if(param==null || param.length() <= 0)
		 param =  WebUtils.getStringParam(request, new ClienteHelper().getLocalidadIdName());
	 if(param==null || param.length() <= 0)
		 param =  WebUtils.getStringParam(request, new TrabajadorHelper().getLocalidadIdName());
	 LocalidadGroupBean mgb = LocalidadManager.getLocalidads(LocalidadManager.buildSearchCriteria(param));
	 simpleResponseService(response, AjaxUtils.buildAjaxULContentFromListObj(mgb.getAlmacen(),methodos, LocalidadHelper.COMPLEX_ID_GET_METHOD,"Localidad"));
 }
}


