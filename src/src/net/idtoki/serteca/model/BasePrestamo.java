package net.idtoki.serteca.model;


import java.math.BigDecimal;
import java.sql.Connection;
import java.util.ArrayList;
import java.util.Collections;
import java.util.Date;
import java.util.List;

import net.zylk.tools.ajax.AjaxUtils;

import org.apache.commons.lang.ObjectUtils;
import org.apache.torque.TorqueException;
import org.apache.torque.om.BaseObject;
import org.apache.torque.om.ComboKey;
import org.apache.torque.om.DateKey;
import org.apache.torque.om.NumberKey;
import org.apache.torque.om.ObjectKey;
import org.apache.torque.om.SimpleKey;
import org.apache.torque.om.StringKey;
import org.apache.torque.om.Persistent;
import org.apache.torque.util.Criteria;
import org.apache.torque.util.Transaction;

  
    
  
/**
 * This class was autogenerated by Torque on:
 *
 * [Mon Jul 03 11:03:24 CEST 2006]
 *
 * You should not use this class directly.  It should not even be
 * extended all references should be to Prestamo
 */
public abstract class BasePrestamo extends BaseObject
{
    /** The Peer class */
    private static final PrestamoPeer peer =
        new PrestamoPeer();

                                            
    /** The value for the id field */
    private int id = -1;
      
    /** The value for the vehiculoCortesiaId field */
    private int vehiculoCortesiaId;
      
    /** The value for the reparacionId field */
    private int reparacionId;
      
    /** The value for the estadoPrevio field */
    private String estadoPrevio;
      
    /** The value for the estadoEntrega field */
    private String estadoEntrega;
      
    /** The value for the fechaIni field */
    private String fechaIni;
      
    /** The value for the fechaFin field */
    private String fechaFin;
      
    /** The value for the horaIni field */
    private String horaIni;
      
    /** The value for the horaFin field */
    private String horaFin;
  
    
    /**
     * Get the Id
     *
     * @return int
     */
    public int getId()
    {
        return id;
    }

                        
    /**
     * Set the value of Id
     *
     * @param v new value
     */
    public void setId(int v) 
    {
    
                  if (this.id != v)
              {
            this.id = v;
            setModified(true);
        }
    
          
              }
  
    /**
     * Get the VehiculoCortesiaId
     *
     * @return int
     */
    public int getVehiculoCortesiaId()
    {
        return vehiculoCortesiaId;
    }

                              
    /**
     * Set the value of VehiculoCortesiaId
     *
     * @param v new value
     */
    public void setVehiculoCortesiaId(int v) throws TorqueException
    {
    
                  if (this.vehiculoCortesiaId != v)
              {
            this.vehiculoCortesiaId = v;
            setModified(true);
        }
    
                          
                if (aVehiculoCortesia != null && !(aVehiculoCortesia.getId() == v))
                {
            aVehiculoCortesia = null;
        }
      
              }
  
    /**
     * Get the ReparacionId
     *
     * @return int
     */
    public int getReparacionId()
    {
        return reparacionId;
    }

                              
    /**
     * Set the value of ReparacionId
     *
     * @param v new value
     */
    public void setReparacionId(int v) throws TorqueException
    {
    
                  if (this.reparacionId != v)
              {
            this.reparacionId = v;
            setModified(true);
        }
    
                          
                if (aReparacion != null && !(aReparacion.getId() == v))
                {
            aReparacion = null;
        }
      
              }
  
    /**
     * Get the EstadoPrevio
     *
     * @return String
     */
    public String getEstadoPrevio()
    {
        return estadoPrevio;
    }

                        
    /**
     * Set the value of EstadoPrevio
     *
     * @param v new value
     */
    public void setEstadoPrevio(String v) 
    {
    
                  if (!ObjectUtils.equals(this.estadoPrevio, v))
              {
            this.estadoPrevio = v;
            setModified(true);
        }
    
          
              }
  
    /**
     * Get the EstadoEntrega
     *
     * @return String
     */
    public String getEstadoEntrega()
    {
        return estadoEntrega;
    }

                        
    /**
     * Set the value of EstadoEntrega
     *
     * @param v new value
     */
    public void setEstadoEntrega(String v) 
    {
    
                  if (!ObjectUtils.equals(this.estadoEntrega, v))
              {
            this.estadoEntrega = v;
            setModified(true);
        }
    
          
              }
  
    /**
     * Get the FechaIni
     *
     * @return String
     */
    public String getFechaIni()
    {
        return fechaIni;
    }

                        
    /**
     * Set the value of FechaIni
     *
     * @param v new value
     */
    public void setFechaIni(String v) 
    {
    
                  if (!ObjectUtils.equals(this.fechaIni, v))
              {
            this.fechaIni = v;
            setModified(true);
        }
    
          
              }
  
    /**
     * Get the FechaFin
     *
     * @return String
     */
    public String getFechaFin()
    {
        return fechaFin;
    }

                        
    /**
     * Set the value of FechaFin
     *
     * @param v new value
     */
    public void setFechaFin(String v) 
    {
    
                  if (!ObjectUtils.equals(this.fechaFin, v))
              {
            this.fechaFin = v;
            setModified(true);
        }
    
          
              }
  
    /**
     * Get the HoraIni
     *
     * @return String
     */
    public String getHoraIni()
    {
        return horaIni;
    }

                        
    /**
     * Set the value of HoraIni
     *
     * @param v new value
     */
    public void setHoraIni(String v) 
    {
    
                  if (!ObjectUtils.equals(this.horaIni, v))
              {
            this.horaIni = v;
            setModified(true);
        }
    
          
              }
  
    /**
     * Get the HoraFin
     *
     * @return String
     */
    public String getHoraFin()
    {
        return horaFin;
    }

                        
    /**
     * Set the value of HoraFin
     *
     * @param v new value
     */
    public void setHoraFin(String v) 
    {
    
                  if (!ObjectUtils.equals(this.horaFin, v))
              {
            this.horaFin = v;
            setModified(true);
        }
    
          
              }
  
      
    
                  
    
        private VehiculoCortesia aVehiculoCortesia;

    /**
     * Declares an association between this object and a VehiculoCortesia object
     *
     * @param v VehiculoCortesia
     * @throws TorqueException
     */
    public void setVehiculoCortesia(VehiculoCortesia v) throws TorqueException
    {
            if (v == null)
        {
                          setVehiculoCortesiaId( 0);
              }
        else
        {
            setVehiculoCortesiaId(v.getId());
        }
            aVehiculoCortesia = v;
    }

                                            
    /**
     * Get the associated VehiculoCortesia object
     *
     * @return the associated VehiculoCortesia object
     * @throws TorqueException
     */
    public VehiculoCortesia getVehiculoCortesia() throws TorqueException
    {
        if (aVehiculoCortesia == null && (this.vehiculoCortesiaId != 0))
        {
                          aVehiculoCortesia = VehiculoCortesiaPeer.retrieveByPK(SimpleKey.keyFor(this.vehiculoCortesiaId));
              
            /* The following can be used instead of the line above to
               guarantee the related object contains a reference
               to this object, but this level of coupling
               may be undesirable in many circumstances.
               As it can lead to a db query with many results that may
               never be used.
               VehiculoCortesia obj = VehiculoCortesiaPeer.retrieveByPK(this.vehiculoCortesiaId);
               obj.addPrestamos(this);
            */
        }
        return aVehiculoCortesia;
    }

    /**
     * Provides convenient way to set a relationship based on a
     * ObjectKey, for example
     * <code>bar.setFooKey(foo.getPrimaryKey())</code>
     *
         */
    public void setVehiculoCortesiaKey(ObjectKey key) throws TorqueException
    {
      
                        setVehiculoCortesiaId(((NumberKey) key).intValue());
                  }
    
    
                  
    
        private Reparacion aReparacion;

    /**
     * Declares an association between this object and a Reparacion object
     *
     * @param v Reparacion
     * @throws TorqueException
     */
    public void setReparacion(Reparacion v) throws TorqueException
    {
            if (v == null)
        {
                          setReparacionId( 0);
              }
        else
        {
            setReparacionId(v.getId());
        }
            aReparacion = v;
    }

                                            
    /**
     * Get the associated Reparacion object
     *
     * @return the associated Reparacion object
     * @throws TorqueException
     */
    public Reparacion getReparacion() throws TorqueException
    {
        if (aReparacion == null && (this.reparacionId != 0))
        {
                          aReparacion = ReparacionPeer.retrieveByPK(SimpleKey.keyFor(this.reparacionId));
              
            /* The following can be used instead of the line above to
               guarantee the related object contains a reference
               to this object, but this level of coupling
               may be undesirable in many circumstances.
               As it can lead to a db query with many results that may
               never be used.
               Reparacion obj = ReparacionPeer.retrieveByPK(this.reparacionId);
               obj.addPrestamos(this);
            */
        }
        return aReparacion;
    }

    /**
     * Provides convenient way to set a relationship based on a
     * ObjectKey, for example
     * <code>bar.setFooKey(foo.getPrimaryKey())</code>
     *
         */
    public void setReparacionKey(ObjectKey key) throws TorqueException
    {
      
                        setReparacionId(((NumberKey) key).intValue());
                  }
       
                
    private static List fieldNames = null;

    /**
     * Generate a list of field names.
     *
     * @return a list of field names
     */
    public static synchronized List getFieldNames()
    {
        if (fieldNames == null)
        {
            fieldNames = new ArrayList();
              fieldNames.add("Id");
              fieldNames.add("VehiculoCortesiaId");
              fieldNames.add("ReparacionId");
              fieldNames.add("EstadoPrevio");
              fieldNames.add("EstadoEntrega");
              fieldNames.add("FechaIni");
              fieldNames.add("FechaFin");
              fieldNames.add("HoraIni");
              fieldNames.add("HoraFin");
              fieldNames = Collections.unmodifiableList(fieldNames);
        }
        return fieldNames;
    }

    /**
     * Retrieves a field from the object by name passed in as a String.
     *
     * @param name field name
     * @return value
     */
    public Object getByName(String name)
    {
          if (name.equals("Id"))
        {
                return new Integer(getId());
            }
          if (name.equals("VehiculoCortesiaId"))
        {
                return new Integer(getVehiculoCortesiaId());
            }
          if (name.equals("ReparacionId"))
        {
                return new Integer(getReparacionId());
            }
          if (name.equals("EstadoPrevio"))
        {
                return getEstadoPrevio();
            }
          if (name.equals("EstadoEntrega"))
        {
                return getEstadoEntrega();
            }
          if (name.equals("FechaIni"))
        {
                return getFechaIni();
            }
          if (name.equals("FechaFin"))
        {
                return getFechaFin();
            }
          if (name.equals("HoraIni"))
        {
                return getHoraIni();
            }
          if (name.equals("HoraFin"))
        {
                return getHoraFin();
            }
          return null;
    }

    /**
     * Retrieves a field from the object by name passed in
     * as a String.  The String must be one of the static
     * Strings defined in this Class' Peer.
     *
     * @param name peer name
     * @return value
     */
    public Object getByPeerName(String name)
    {
          if (name.equals(PrestamoPeer.ID))
        {
                return new Integer(getId());
            }
          if (name.equals(PrestamoPeer.VEHICULO_CORTESIA_ID))
        {
                return new Integer(getVehiculoCortesiaId());
            }
          if (name.equals(PrestamoPeer.REPARACION_ID))
        {
                return new Integer(getReparacionId());
            }
          if (name.equals(PrestamoPeer.ESTADO_PREVIO))
        {
                return getEstadoPrevio();
            }
          if (name.equals(PrestamoPeer.ESTADO_ENTREGA))
        {
                return getEstadoEntrega();
            }
          if (name.equals(PrestamoPeer.FECHA_INI))
        {
                return getFechaIni();
            }
          if (name.equals(PrestamoPeer.FECHA_FIN))
        {
                return getFechaFin();
            }
          if (name.equals(PrestamoPeer.HORA_INI))
        {
                return getHoraIni();
            }
          if (name.equals(PrestamoPeer.HORA_FIN))
        {
                return getHoraFin();
            }
          return null;
    }

    /**
     * Retrieves a field from the object by Position as specified
     * in the xml schema.  Zero-based.
     *
     * @param pos position in xml schema
     * @return value
     */
    public Object getByPosition(int pos)
    {
            if (pos == 0)
        {
                return new Integer(getId());
            }
              if (pos == 1)
        {
                return new Integer(getVehiculoCortesiaId());
            }
              if (pos == 2)
        {
                return new Integer(getReparacionId());
            }
              if (pos == 3)
        {
                return getEstadoPrevio();
            }
              if (pos == 4)
        {
                return getEstadoEntrega();
            }
              if (pos == 5)
        {
                return getFechaIni();
            }
              if (pos == 6)
        {
                return getFechaFin();
            }
              if (pos == 7)
        {
                return getHoraIni();
            }
              if (pos == 8)
        {
                return getHoraFin();
            }
              return null;
    }
     
    /**
     * Stores the object in the database.  If the object is new,
     * it inserts it; otherwise an update is performed.
     *
     * @throws Exception
     */
    public void save() throws Exception
    {
          save(PrestamoPeer.getMapBuilder()
                .getDatabaseMap().getName());
      }

    /**
     * Stores the object in the database.  If the object is new,
     * it inserts it; otherwise an update is performed.
       * Note: this code is here because the method body is
     * auto-generated conditionally and therefore needs to be
     * in this file instead of in the super class, BaseObject.
       *
     * @param dbName
     * @throws TorqueException
     */
    public void save(String dbName) throws TorqueException
    {
        Connection con = null;
          try
        {
            con = Transaction.begin(dbName);
            save(con);
            Transaction.commit(con);
        }
        catch(TorqueException e)
        {
            Transaction.safeRollback(con);
            throw e;
        }
      }

      /** flag to prevent endless save loop, if this object is referenced
        by another object which falls in this transaction. */
    private boolean alreadyInSave = false;
      /**
     * Stores the object in the database.  If the object is new,
     * it inserts it; otherwise an update is performed.  This method
     * is meant to be used as part of a transaction, otherwise use
     * the save() method and the connection details will be handled
     * internally
     *
     * @param con
     * @throws TorqueException
     */
    public void save(Connection con) throws TorqueException
    {
          if (!alreadyInSave)
        {
            alreadyInSave = true;


  
            // If this object has been modified, then save it to the database.
            if (isModified())
            {
                if (isNew())
                {
                    PrestamoPeer.doInsert((Prestamo) this, con);
                    setNew(false);
                }
                else
                {
                    PrestamoPeer.doUpdate((Prestamo) this, con);
                }
            }

                      alreadyInSave = false;
        }
      }

                  
      /**
     * Set the PrimaryKey using ObjectKey.
     *
     * @param key id ObjectKey
     */
    public void setPrimaryKey(ObjectKey key)
        
    {
            setId(((NumberKey) key).intValue());
        }

    /**
     * Set the PrimaryKey using a String.
     *
     * @param key
     */
    public void setPrimaryKey(String key) 
    {
            setId(Integer.parseInt(key));
        }

  
    /**
     * returns an id that differentiates this object from others
     * of its class.
     */
    public ObjectKey getPrimaryKey()
    {
          return SimpleKey.keyFor(getId());
      }
 

    /**
     * Makes a copy of this object.
     * It creates a new object filling in the simple attributes.
       * It then fills all the association collections and sets the
     * related objects to isNew=true.
       */
      public Prestamo copy() throws TorqueException
    {
        return copyInto(new Prestamo());
    }
  
    protected Prestamo copyInto(Prestamo copyObj) throws TorqueException
    {
          copyObj.setId(id);
          copyObj.setVehiculoCortesiaId(vehiculoCortesiaId);
          copyObj.setReparacionId(reparacionId);
          copyObj.setEstadoPrevio(estadoPrevio);
          copyObj.setEstadoEntrega(estadoEntrega);
          copyObj.setFechaIni(fechaIni);
          copyObj.setFechaFin(fechaFin);
          copyObj.setHoraIni(horaIni);
          copyObj.setHoraFin(horaFin);
  
                            copyObj.setId( -1);
                                                            
                return copyObj;
    }

    /**
     * returns a peer instance associated with this om.  Since Peer classes
     * are not to have any instance attributes, this method returns the
     * same instance for all member of this class. The method could therefore
     * be static, but this would prevent one from overriding the behavior.
     */
    public PrestamoPeer getPeer()
    {
        return peer;
    }

    public String toString()
    {
        StringBuffer str = new StringBuffer();
        str.append("Prestamo:\n");
        str.append("Id = ")
               .append(getId())
             .append("\n");
        str.append("VehiculoCortesiaId = ")
               .append(getVehiculoCortesiaId())
             .append("\n");
        str.append("ReparacionId = ")
               .append(getReparacionId())
             .append("\n");
        str.append("EstadoPrevio = ")
               .append(getEstadoPrevio())
             .append("\n");
        str.append("EstadoEntrega = ")
               .append(getEstadoEntrega())
             .append("\n");
        str.append("FechaIni = ")
               .append(getFechaIni())
             .append("\n");
        str.append("FechaFin = ")
               .append(getFechaFin())
             .append("\n");
        str.append("HoraIni = ")
               .append(getHoraIni())
             .append("\n");
        str.append("HoraFin = ")
               .append(getHoraFin())
             .append("\n");
        return(str.toString());
    }
    public String getComplexId()
    {
    ArrayList a = new ArrayList();
      	          a.add(Integer.toString(this.getId()));
                return  AjaxUtils.concatenateIdFields(a);
    }
}
