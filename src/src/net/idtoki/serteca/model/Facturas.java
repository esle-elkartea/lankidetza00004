
package net.idtoki.serteca.model;

import java.util.logging.Logger;

import net.zylk.tools.format.FormatUtils;

import org.apache.torque.TorqueException;
import org.apache.torque.om.Persistent;

import com.workingdogs.village.DataSetException;

import net.idtoki.serteca.manager.FacturasManager;

/**
 * The skeleton for this class was autogenerated by Torque on:
 *
 * [Wed Feb 01 12:46:43 CET 2006]
 *
 * You should add additional methods to this class to meet the
 * application requirements.  This class will only be generated as
 * long as it does not already exist in the output directory.
 */
public  class Facturas
    extends net.idtoki.serteca.model.BaseFacturas
    implements Persistent
{
	private static final Logger logger = Logger.getLogger("net.idtoki.serteca.controller.Facturas");
	
	public String getClienteIdFacturasParsed()
	{
		String nombre=null;
		try
		{
			 nombre= this.getCliente().getId() + "-" + this.getCliente().getNombreClienteParsed();	
		}
		catch(TorqueException te)
		{
			logger.severe("No se ha podido localizar el cliente. public String getClienteIdFacturasParsed()" );
			te.printStackTrace();
		}
		return FormatUtils.genericParsedStr(nombre);
	}
	public String getReparacionIdFacturasParsed()
	{
		String nombre=null;
		try
		{
			 nombre= this.getReparacion().getId() + "-" + this.getReparacion().getVehiculoIdReparacionParsed();	
		}
		catch(TorqueException te)
		{
			logger.severe("No se ha podido localizar la reparación. public String getReparacionIdFacturasParsed()" );
			te.printStackTrace();
		}
		return FormatUtils.genericParsedStr(nombre);
	}	
	public String getFechaIniFacturasParsed()
	{
		return FormatUtils.genericParsedStr(FormatUtils.aaaammdd2ddmmaaaa(this.getFechaIni(),"-"));
	}	
	public String getObsFacturasParsed()
	{
		return FormatUtils.genericParsedStr(this.getObs());
	}
	public String getImporteFacturasParsed()
	{
		return FormatUtils.genericParsedStr(new Float(this.getImporte()).toString());
	}	
	public String getEstadoFacturasParsedLabel()
	{
		String cadena="";
		switch (this.getEstado())
		{
		case 0:
			cadena="<span class='Estilo_00'>Emitida</span>";
			break;
		case 1:
			cadena="<span class='Estilo_01'>Pendiente</span>";
			break;
		case 2:
			cadena="<span class='Estilo_02'>Cobrada</span>";
			break;
		default:
			cadena="<span class='Estilo_03'>n/a</span>";
			break;
		}
		return cadena;
	}
	public String getEstadoFacturasParsed()
	{
		String cadena="";
		switch (this.getEstado())
		{
		case 0:
			cadena="0-Emitida";
			break;
		case 1:
			cadena="1-Pendiente";
			break;
		case 2:
			cadena="2-Cobrada";
			break;
		}
		return cadena;
	}
	public String getImporteCalculadoFacturasParsed() throws TorqueException,DataSetException
	{
		double importeCalculado = FacturasManager.getImporteCalculadoFacturas(this.getId());
		return importeCalculado+"";
	}
	public String getDescripcionFacturasParsed()
	{
		return FormatUtils.genericParsedStr(this.getDescripcion());
	}
	public String getDeleteFactura()
	{
		return "<a href='#' class='eliminar' id='getDeleteFactura" + this.getId() + "'>&#160;&#160;&#160;&#160;</a>";
	}	
	public String getEditFactura()
	{
		return "<a href='#' class='edicion' id='getEditFactura" + this.getId() + "'>&#160;&#160;&#160;&#160;</a>";
	}	
}
