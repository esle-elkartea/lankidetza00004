package net.idtoki.serteca.helper;

import net.zylk.web.WebUtils;
import net.zylk.web.helper.BaseHelper;
import javax.servlet.http.HttpServletRequest;
import org.apache.torque.TorqueException;
import net.zylk.tools.format.FormatUtils;


import net.idtoki.serteca.model.FormaPagoPeer;
import net.idtoki.serteca.model.FormaPago;
import net.idtoki.serteca.manager.FormaPagoManager;

/**
 * This class was autogenerated by Torque on:
 *
 * [Mon Jul 03 11:03:24 CEST 2006]
 *
 */
public abstract class BaseFormaPagoHelper extends BaseHelper
{
	public static final String COMPLEX_ID_GET_METHOD = "getComplexId";
	private FormaPago obj;
	public static final String ID_GET_METHOD_NAME = "getId";
	public static final String NOMBRE_GET_METHOD_NAME = "getNombre";


	public BaseFormaPagoHelper()
	{
		this.obj = new FormaPago();
	}

	public BaseFormaPagoHelper(FormaPago obj)
	{
		this.obj = obj;
	}


	public String getIdHTMLAttrs()
	{
		return " name=\"" + getIdName() + "\" " +
			   "id=\"" + getIdId() + "\" " +
			   "value=\"" + getIdValue() + "\" ";
	 }

	public String getIdId()
	{
		return getIdId(obj);
	}

	private static String getIdId(FormaPago o)
	{
		return FormaPagoPeer.ID;
	}

	public String getIdName()
	{
		return getIdName(obj);
	}

	private static String getIdName(FormaPago o)
	{
		return FormaPagoPeer.ID;
	}

	public String getIdValue()
	{
		return getIdValue(obj);
	}

	private static String getIdValue(FormaPago o)
	{
			return "" + o.getId();
		}

	public String getNombreHTMLAttrs()
	{
		return " name=\"" + getNombreName() + "\" " +
			   "id=\"" + getNombreId() + "\" " +
			   "value=\"" + getNombreValue() + "\" ";
	 }

	public String getNombreId()
	{
		return getNombreId(obj);
	}

	private static String getNombreId(FormaPago o)
	{
		return FormaPagoPeer.NOMBRE;
	}

	public String getNombreName()
	{
		return getNombreName(obj);
	}

	private static String getNombreName(FormaPago o)
	{
		return FormaPagoPeer.NOMBRE;
	}

	public String getNombreValue()
	{
		return getNombreValue(obj);
	}

	private static String getNombreValue(FormaPago o)
	{
			if(o.getNombre() != null)
			return "" + o.getNombre();
		else
			return "";
		}

	public static FormaPago getFormaPago(HttpServletRequest req) throws TorqueException
	{
										
		int id_Id = WebUtils.getintParam(req, getIdName(new FormaPago()));

	
		FormaPago o = new FormaPago();
		if((id_Id >= 0)) // no es nuevo y lo fijamos en el objeto
		{
			o = FormaPagoManager.getFormaPago(id_Id);
		}
		return o;
	}

	public static FormaPago createObj(HttpServletRequest req) throws TorqueException
	{
		FormaPago o =  BaseFormaPagoHelper.getFormaPago(req);
			 o.setId(WebUtils.getintParam(req, getIdName(o)));
		
			 o.setNombre(WebUtils.getStringParam(req, getNombreName(o)));
		
			return o;
	}
}
