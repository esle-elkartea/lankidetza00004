package net.idtoki.serteca.helper;

import net.zylk.web.WebUtils;
import net.zylk.web.helper.BaseHelper;
import javax.servlet.http.HttpServletRequest;
import org.apache.torque.TorqueException;
import net.zylk.tools.format.FormatUtils;


import net.idtoki.serteca.model.ModeloPeer;
import net.idtoki.serteca.model.Modelo;
import net.idtoki.serteca.manager.ModeloManager;

/**
 * This class was autogenerated by Torque on:
 *
 * [Mon Jul 03 11:03:24 CEST 2006]
 *
 */
public abstract class BaseModeloHelper extends BaseHelper
{
	public static final String COMPLEX_ID_GET_METHOD = "getComplexId";
	private Modelo obj;
	public static final String ID_GET_METHOD_NAME = "getId";
	public static final String NOMBRE_GET_METHOD_NAME = "getNombre";
	public static final String MARCA_ID_GET_METHOD_NAME = "getMarcaId";


	public BaseModeloHelper()
	{
		this.obj = new Modelo();
	}

	public BaseModeloHelper(Modelo obj)
	{
		this.obj = obj;
	}


	public String getIdHTMLAttrs()
	{
		return " name=\"" + getIdName() + "\" " +
			   "id=\"" + getIdId() + "\" " +
			   "value=\"" + getIdValue() + "\" ";
	 }

	public String getIdId()
	{
		return getIdId(obj);
	}

	private static String getIdId(Modelo o)
	{
		return ModeloPeer.ID;
	}

	public String getIdName()
	{
		return getIdName(obj);
	}

	private static String getIdName(Modelo o)
	{
		return ModeloPeer.ID;
	}

	public String getIdValue()
	{
		return getIdValue(obj);
	}

	private static String getIdValue(Modelo o)
	{
			return "" + o.getId();
		}

	public String getNombreHTMLAttrs()
	{
		return " name=\"" + getNombreName() + "\" " +
			   "id=\"" + getNombreId() + "\" " +
			   "value=\"" + getNombreValue() + "\" ";
	 }

	public String getNombreId()
	{
		return getNombreId(obj);
	}

	private static String getNombreId(Modelo o)
	{
		return ModeloPeer.NOMBRE;
	}

	public String getNombreName()
	{
		return getNombreName(obj);
	}

	private static String getNombreName(Modelo o)
	{
		return ModeloPeer.NOMBRE;
	}

	public String getNombreValue()
	{
		return getNombreValue(obj);
	}

	private static String getNombreValue(Modelo o)
	{
			if(o.getNombre() != null)
			return "" + o.getNombre();
		else
			return "";
		}

	public String getMarcaIdHTMLAttrs()
	{
		return " name=\"" + getMarcaIdName() + "\" " +
			   "id=\"" + getMarcaIdId() + "\" " +
			   "value=\"" + getMarcaIdValue() + "\" ";
	 }

	public String getMarcaIdId()
	{
		return getMarcaIdId(obj);
	}

	private static String getMarcaIdId(Modelo o)
	{
		return ModeloPeer.MARCA_ID;
	}

	public String getMarcaIdName()
	{
		return getMarcaIdName(obj);
	}

	private static String getMarcaIdName(Modelo o)
	{
		return ModeloPeer.MARCA_ID;
	}

	public String getMarcaIdValue()
	{
		return getMarcaIdValue(obj);
	}

	private static String getMarcaIdValue(Modelo o)
	{
			return "" + o.getMarcaId();
		}

	public static Modelo getModelo(HttpServletRequest req) throws TorqueException
	{
										
		int id_Id = WebUtils.getintParam(req, getIdName(new Modelo()));

	
		Modelo o = new Modelo();
		if((id_Id >= 0)) // no es nuevo y lo fijamos en el objeto
		{
			o = ModeloManager.getModelo(id_Id);
		}
		return o;
	}

	public static Modelo createObj(HttpServletRequest req) throws TorqueException
	{
		Modelo o =  BaseModeloHelper.getModelo(req);
			 o.setId(WebUtils.getintParam(req, getIdName(o)));
		
			 o.setNombre(WebUtils.getStringParam(req, getNombreName(o)));
		
			 		o.setMarcaId(Integer.parseInt(FormatUtils.getFkIdFromString(WebUtils.getStringParam(req, getMarcaIdName(o)))));
		
			return o;
	}
}
