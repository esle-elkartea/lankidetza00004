package net.idtoki.serteca.manager;

import java.util.logging.Logger;
import net.idtoki.serteca.model.ClientePeer;
import net.idtoki.serteca.group.ClienteGroupBean;
import net.idtoki.serteca.model.Cliente;
import net.zylk.torque.SearchQuery;
import net.zylk.torque.BaseQuery;
import net.zylk.torque.TorqueUtils;
import net.zylk.torque.manager.BaseManager;
import org.apache.torque.TorqueException;
import java.util.Enumeration;


import net.idtoki.serteca.model.Localidad;
import net.idtoki.serteca.model.LocalidadPeer;
import net.idtoki.serteca.model.FormaPago;
import net.idtoki.serteca.model.FormaPagoPeer;

import org.apache.torque.util.Criteria;
import org.apache.torque.util.UniqueList;
import net.zylk.tools.ajax.AjaxUtils.DinamicGridBean;

/**
 * This class was autogenerated by Torque on:
 *
 * [Mon Jul 03 11:03:24 CEST 2006]
 *
 */
public abstract class BaseClienteManager extends BaseManager
{
	protected static final Logger logger = Logger.getLogger(
	   "net.idtoki.serteca.managers.BaseClienteManager");

	public static final Criteria buildSearchCriteria(DinamicGridBean dgb)
	{
		return BaseManager.buildSearchCriteria(dgb, new ClienteManager());
	}

	public static final Criteria buildSearchCriteria(String query, int offset, int limit)
	{
		return BaseManager.buildSearchCriteria(query, offset, limit, new ClienteManager());
	}

	public static final Criteria buildSearchCriteria(String query)
	{
		return BaseManager.buildSearchCriteria(query, new ClienteManager());
	}

	protected void addOrSearchCriteria(Criteria criteria,String campo,String valor, String condicion){
		Criteria.Criterion criterion = ClienteManager.getSearchCriterion(campo,valor, condicion);
		//Si existe ya un criterion hay que utilizarlo para añadir el or sino utilizará un and
		Enumeration enumeration =criteria.elements();
		if(enumeration.hasMoreElements()){
			Criteria.Criterion cr = (Criteria.Criterion) enumeration.nextElement();
			cr.or(criterion);
		}else{
			criteria.or(criterion);
		}
	}

	protected void addAndSearchCriteria(Criteria criteria,String campo, String valor, String condicion){
		Criteria.Criterion criterion = ClienteManager.getSearchCriterion(campo,valor, condicion);
		criteria.and(criterion);
	}

	protected static Criteria.Criterion getSearchCriterion(String campo,String valor, String condicion){
        Criteria criteria =  new Criteria();
        Criteria.Criterion criterion = null;

			if(campo.equals("all") || campo.equals(BaseManager.campoToLowerCase(ClientePeer.ID)))
		{
			if(condicion.equals(BaseQuery.SingleQuery.EQUAL_CONDITION))
				criterion = TorqueUtils.addOrEqualCriteria(criterion,ClientePeer.ID,valor,true);
			else if (condicion.equals(BaseQuery.SingleQuery.LIKE_CONDITION))
				criterion = TorqueUtils.addOrLikeCriteria(criterion,ClientePeer.ID,valor,true);
			else if (condicion.equals(BaseQuery.SingleQuery.LESS_CONDITION))
				criterion = TorqueUtils.addOrLessCriteria(criterion,ClientePeer.ID,valor,true);
			else if (condicion.equals(BaseQuery.SingleQuery.GREATER_CONDITION))
				criterion = TorqueUtils.addOrGreaterCriteria(criterion,ClientePeer.ID,valor,true);
		}
			if(campo.equals("all") || campo.equals(BaseManager.campoToLowerCase(ClientePeer.NOMBRE)))
		{
			if(condicion.equals(BaseQuery.SingleQuery.EQUAL_CONDITION))
				criterion = TorqueUtils.addOrEqualCriteria(criterion,ClientePeer.NOMBRE,valor,true);
			else if (condicion.equals(BaseQuery.SingleQuery.LIKE_CONDITION))
				criterion = TorqueUtils.addOrLikeCriteria(criterion,ClientePeer.NOMBRE,valor,true);
			else if (condicion.equals(BaseQuery.SingleQuery.LESS_CONDITION))
				criterion = TorqueUtils.addOrLessCriteria(criterion,ClientePeer.NOMBRE,valor,true);
			else if (condicion.equals(BaseQuery.SingleQuery.GREATER_CONDITION))
				criterion = TorqueUtils.addOrGreaterCriteria(criterion,ClientePeer.NOMBRE,valor,true);
		}
			if(campo.equals("all") || campo.equals(BaseManager.campoToLowerCase(ClientePeer.NOMBRECOMERCIAL)))
		{
			if(condicion.equals(BaseQuery.SingleQuery.EQUAL_CONDITION))
				criterion = TorqueUtils.addOrEqualCriteria(criterion,ClientePeer.NOMBRECOMERCIAL,valor,true);
			else if (condicion.equals(BaseQuery.SingleQuery.LIKE_CONDITION))
				criterion = TorqueUtils.addOrLikeCriteria(criterion,ClientePeer.NOMBRECOMERCIAL,valor,true);
			else if (condicion.equals(BaseQuery.SingleQuery.LESS_CONDITION))
				criterion = TorqueUtils.addOrLessCriteria(criterion,ClientePeer.NOMBRECOMERCIAL,valor,true);
			else if (condicion.equals(BaseQuery.SingleQuery.GREATER_CONDITION))
				criterion = TorqueUtils.addOrGreaterCriteria(criterion,ClientePeer.NOMBRECOMERCIAL,valor,true);
		}
			if(campo.equals("all") || campo.equals(BaseManager.campoToLowerCase(ClientePeer.RAZONSOCIAL)))
		{
			if(condicion.equals(BaseQuery.SingleQuery.EQUAL_CONDITION))
				criterion = TorqueUtils.addOrEqualCriteria(criterion,ClientePeer.RAZONSOCIAL,valor,true);
			else if (condicion.equals(BaseQuery.SingleQuery.LIKE_CONDITION))
				criterion = TorqueUtils.addOrLikeCriteria(criterion,ClientePeer.RAZONSOCIAL,valor,true);
			else if (condicion.equals(BaseQuery.SingleQuery.LESS_CONDITION))
				criterion = TorqueUtils.addOrLessCriteria(criterion,ClientePeer.RAZONSOCIAL,valor,true);
			else if (condicion.equals(BaseQuery.SingleQuery.GREATER_CONDITION))
				criterion = TorqueUtils.addOrGreaterCriteria(criterion,ClientePeer.RAZONSOCIAL,valor,true);
		}
			if(campo.equals("all") || campo.equals(BaseManager.campoToLowerCase(ClientePeer.NIF)))
		{
			if(condicion.equals(BaseQuery.SingleQuery.EQUAL_CONDITION))
				criterion = TorqueUtils.addOrEqualCriteria(criterion,ClientePeer.NIF,valor,true);
			else if (condicion.equals(BaseQuery.SingleQuery.LIKE_CONDITION))
				criterion = TorqueUtils.addOrLikeCriteria(criterion,ClientePeer.NIF,valor,true);
			else if (condicion.equals(BaseQuery.SingleQuery.LESS_CONDITION))
				criterion = TorqueUtils.addOrLessCriteria(criterion,ClientePeer.NIF,valor,true);
			else if (condicion.equals(BaseQuery.SingleQuery.GREATER_CONDITION))
				criterion = TorqueUtils.addOrGreaterCriteria(criterion,ClientePeer.NIF,valor,true);
		}
			if(campo.equals("all") || campo.equals(BaseManager.campoToLowerCase(ClientePeer.DIRECCION)))
		{
			if(condicion.equals(BaseQuery.SingleQuery.EQUAL_CONDITION))
				criterion = TorqueUtils.addOrEqualCriteria(criterion,ClientePeer.DIRECCION,valor,true);
			else if (condicion.equals(BaseQuery.SingleQuery.LIKE_CONDITION))
				criterion = TorqueUtils.addOrLikeCriteria(criterion,ClientePeer.DIRECCION,valor,true);
			else if (condicion.equals(BaseQuery.SingleQuery.LESS_CONDITION))
				criterion = TorqueUtils.addOrLessCriteria(criterion,ClientePeer.DIRECCION,valor,true);
			else if (condicion.equals(BaseQuery.SingleQuery.GREATER_CONDITION))
				criterion = TorqueUtils.addOrGreaterCriteria(criterion,ClientePeer.DIRECCION,valor,true);
		}
			if(campo.equals("all") || campo.equals(BaseManager.campoToLowerCase(ClientePeer.LOCALIDAD_ID)))
		{
			if(condicion.equals(BaseQuery.SingleQuery.EQUAL_CONDITION))
				criterion = TorqueUtils.addOrEqualCriteria(criterion,ClientePeer.LOCALIDAD_ID,valor,true);
			else if (condicion.equals(BaseQuery.SingleQuery.LIKE_CONDITION))
				criterion = TorqueUtils.addOrLikeCriteria(criterion,ClientePeer.LOCALIDAD_ID,valor,true);
			else if (condicion.equals(BaseQuery.SingleQuery.LESS_CONDITION))
				criterion = TorqueUtils.addOrLessCriteria(criterion,ClientePeer.LOCALIDAD_ID,valor,true);
			else if (condicion.equals(BaseQuery.SingleQuery.GREATER_CONDITION))
				criterion = TorqueUtils.addOrGreaterCriteria(criterion,ClientePeer.LOCALIDAD_ID,valor,true);
		}
			if(campo.equals("all") || campo.equals(BaseManager.campoToLowerCase(ClientePeer.CP)))
		{
			if(condicion.equals(BaseQuery.SingleQuery.EQUAL_CONDITION))
				criterion = TorqueUtils.addOrEqualCriteria(criterion,ClientePeer.CP,valor,true);
			else if (condicion.equals(BaseQuery.SingleQuery.LIKE_CONDITION))
				criterion = TorqueUtils.addOrLikeCriteria(criterion,ClientePeer.CP,valor,true);
			else if (condicion.equals(BaseQuery.SingleQuery.LESS_CONDITION))
				criterion = TorqueUtils.addOrLessCriteria(criterion,ClientePeer.CP,valor,true);
			else if (condicion.equals(BaseQuery.SingleQuery.GREATER_CONDITION))
				criterion = TorqueUtils.addOrGreaterCriteria(criterion,ClientePeer.CP,valor,true);
		}
			if(campo.equals("all") || campo.equals(BaseManager.campoToLowerCase(ClientePeer.TELEFONO)))
		{
			if(condicion.equals(BaseQuery.SingleQuery.EQUAL_CONDITION))
				criterion = TorqueUtils.addOrEqualCriteria(criterion,ClientePeer.TELEFONO,valor,true);
			else if (condicion.equals(BaseQuery.SingleQuery.LIKE_CONDITION))
				criterion = TorqueUtils.addOrLikeCriteria(criterion,ClientePeer.TELEFONO,valor,true);
			else if (condicion.equals(BaseQuery.SingleQuery.LESS_CONDITION))
				criterion = TorqueUtils.addOrLessCriteria(criterion,ClientePeer.TELEFONO,valor,true);
			else if (condicion.equals(BaseQuery.SingleQuery.GREATER_CONDITION))
				criterion = TorqueUtils.addOrGreaterCriteria(criterion,ClientePeer.TELEFONO,valor,true);
		}
			if(campo.equals("all") || campo.equals(BaseManager.campoToLowerCase(ClientePeer.MOVIL)))
		{
			if(condicion.equals(BaseQuery.SingleQuery.EQUAL_CONDITION))
				criterion = TorqueUtils.addOrEqualCriteria(criterion,ClientePeer.MOVIL,valor,true);
			else if (condicion.equals(BaseQuery.SingleQuery.LIKE_CONDITION))
				criterion = TorqueUtils.addOrLikeCriteria(criterion,ClientePeer.MOVIL,valor,true);
			else if (condicion.equals(BaseQuery.SingleQuery.LESS_CONDITION))
				criterion = TorqueUtils.addOrLessCriteria(criterion,ClientePeer.MOVIL,valor,true);
			else if (condicion.equals(BaseQuery.SingleQuery.GREATER_CONDITION))
				criterion = TorqueUtils.addOrGreaterCriteria(criterion,ClientePeer.MOVIL,valor,true);
		}
			if(campo.equals("all") || campo.equals(BaseManager.campoToLowerCase(ClientePeer.FAX)))
		{
			if(condicion.equals(BaseQuery.SingleQuery.EQUAL_CONDITION))
				criterion = TorqueUtils.addOrEqualCriteria(criterion,ClientePeer.FAX,valor,true);
			else if (condicion.equals(BaseQuery.SingleQuery.LIKE_CONDITION))
				criterion = TorqueUtils.addOrLikeCriteria(criterion,ClientePeer.FAX,valor,true);
			else if (condicion.equals(BaseQuery.SingleQuery.LESS_CONDITION))
				criterion = TorqueUtils.addOrLessCriteria(criterion,ClientePeer.FAX,valor,true);
			else if (condicion.equals(BaseQuery.SingleQuery.GREATER_CONDITION))
				criterion = TorqueUtils.addOrGreaterCriteria(criterion,ClientePeer.FAX,valor,true);
		}
			if(campo.equals("all") || campo.equals(BaseManager.campoToLowerCase(ClientePeer.EMAIL)))
		{
			if(condicion.equals(BaseQuery.SingleQuery.EQUAL_CONDITION))
				criterion = TorqueUtils.addOrEqualCriteria(criterion,ClientePeer.EMAIL,valor,true);
			else if (condicion.equals(BaseQuery.SingleQuery.LIKE_CONDITION))
				criterion = TorqueUtils.addOrLikeCriteria(criterion,ClientePeer.EMAIL,valor,true);
			else if (condicion.equals(BaseQuery.SingleQuery.LESS_CONDITION))
				criterion = TorqueUtils.addOrLessCriteria(criterion,ClientePeer.EMAIL,valor,true);
			else if (condicion.equals(BaseQuery.SingleQuery.GREATER_CONDITION))
				criterion = TorqueUtils.addOrGreaterCriteria(criterion,ClientePeer.EMAIL,valor,true);
		}
			if(campo.equals("all") || campo.equals(BaseManager.campoToLowerCase(ClientePeer.FORMA_PAGO_ID)))
		{
			if(condicion.equals(BaseQuery.SingleQuery.EQUAL_CONDITION))
				criterion = TorqueUtils.addOrEqualCriteria(criterion,ClientePeer.FORMA_PAGO_ID,valor,true);
			else if (condicion.equals(BaseQuery.SingleQuery.LIKE_CONDITION))
				criterion = TorqueUtils.addOrLikeCriteria(criterion,ClientePeer.FORMA_PAGO_ID,valor,true);
			else if (condicion.equals(BaseQuery.SingleQuery.LESS_CONDITION))
				criterion = TorqueUtils.addOrLessCriteria(criterion,ClientePeer.FORMA_PAGO_ID,valor,true);
			else if (condicion.equals(BaseQuery.SingleQuery.GREATER_CONDITION))
				criterion = TorqueUtils.addOrGreaterCriteria(criterion,ClientePeer.FORMA_PAGO_ID,valor,true);
		}
			if(campo.equals("all") || campo.equals(BaseManager.campoToLowerCase(ClientePeer.NUMERO_CUENTA)))
		{
			if(condicion.equals(BaseQuery.SingleQuery.EQUAL_CONDITION))
				criterion = TorqueUtils.addOrEqualCriteria(criterion,ClientePeer.NUMERO_CUENTA,valor,true);
			else if (condicion.equals(BaseQuery.SingleQuery.LIKE_CONDITION))
				criterion = TorqueUtils.addOrLikeCriteria(criterion,ClientePeer.NUMERO_CUENTA,valor,true);
			else if (condicion.equals(BaseQuery.SingleQuery.LESS_CONDITION))
				criterion = TorqueUtils.addOrLessCriteria(criterion,ClientePeer.NUMERO_CUENTA,valor,true);
			else if (condicion.equals(BaseQuery.SingleQuery.GREATER_CONDITION))
				criterion = TorqueUtils.addOrGreaterCriteria(criterion,ClientePeer.NUMERO_CUENTA,valor,true);
		}
			if(campo.equals("all") || campo.equals(BaseManager.campoToLowerCase(ClientePeer.DTO_PRONTO_PAGO)))
		{
			if(condicion.equals(BaseQuery.SingleQuery.EQUAL_CONDITION))
				criterion = TorqueUtils.addOrEqualCriteria(criterion,ClientePeer.DTO_PRONTO_PAGO,valor,true);
			else if (condicion.equals(BaseQuery.SingleQuery.LIKE_CONDITION))
				criterion = TorqueUtils.addOrLikeCriteria(criterion,ClientePeer.DTO_PRONTO_PAGO,valor,true);
			else if (condicion.equals(BaseQuery.SingleQuery.LESS_CONDITION))
				criterion = TorqueUtils.addOrLessCriteria(criterion,ClientePeer.DTO_PRONTO_PAGO,valor,true);
			else if (condicion.equals(BaseQuery.SingleQuery.GREATER_CONDITION))
				criterion = TorqueUtils.addOrGreaterCriteria(criterion,ClientePeer.DTO_PRONTO_PAGO,valor,true);
		}
			if(campo.equals("all") || campo.equals(BaseManager.campoToLowerCase(ClientePeer.DIA_PAGO)))
		{
			if(condicion.equals(BaseQuery.SingleQuery.EQUAL_CONDITION))
				criterion = TorqueUtils.addOrEqualCriteria(criterion,ClientePeer.DIA_PAGO,valor,true);
			else if (condicion.equals(BaseQuery.SingleQuery.LIKE_CONDITION))
				criterion = TorqueUtils.addOrLikeCriteria(criterion,ClientePeer.DIA_PAGO,valor,true);
			else if (condicion.equals(BaseQuery.SingleQuery.LESS_CONDITION))
				criterion = TorqueUtils.addOrLessCriteria(criterion,ClientePeer.DIA_PAGO,valor,true);
			else if (condicion.equals(BaseQuery.SingleQuery.GREATER_CONDITION))
				criterion = TorqueUtils.addOrGreaterCriteria(criterion,ClientePeer.DIA_PAGO,valor,true);
		}
			if(campo.equals("all") || campo.equals(BaseManager.campoToLowerCase(ClientePeer.OBSERVACION)))
		{
			if(condicion.equals(BaseQuery.SingleQuery.EQUAL_CONDITION))
				criterion = TorqueUtils.addOrEqualCriteria(criterion,ClientePeer.OBSERVACION,valor,true);
			else if (condicion.equals(BaseQuery.SingleQuery.LIKE_CONDITION))
				criterion = TorqueUtils.addOrLikeCriteria(criterion,ClientePeer.OBSERVACION,valor,true);
			else if (condicion.equals(BaseQuery.SingleQuery.LESS_CONDITION))
				criterion = TorqueUtils.addOrLessCriteria(criterion,ClientePeer.OBSERVACION,valor,true);
			else if (condicion.equals(BaseQuery.SingleQuery.GREATER_CONDITION))
				criterion = TorqueUtils.addOrGreaterCriteria(criterion,ClientePeer.OBSERVACION,valor,true);
		}
									if(campo.equals("all") || campo.equals(BaseManager.campoToLowerCase(LocalidadPeer.ID)))
		{
			if(condicion.equals(BaseQuery.SingleQuery.EQUAL_CONDITION))
				criterion = TorqueUtils.addOrEqualCriteria(criterion,LocalidadPeer.ID,valor,true);
			else if (condicion.equals(BaseQuery.SingleQuery.LIKE_CONDITION))
				criterion = TorqueUtils.addOrLikeCriteria(criterion,LocalidadPeer.ID,valor,true);
			else if (condicion.equals(BaseQuery.SingleQuery.LESS_CONDITION))
				criterion = TorqueUtils.addOrLessCriteria(criterion,LocalidadPeer.ID,valor,true);
			else if (condicion.equals(BaseQuery.SingleQuery.GREATER_CONDITION))
				criterion = TorqueUtils.addOrGreaterCriteria(criterion,LocalidadPeer.ID,valor,true);
		}
					if(campo.equals("all") || campo.equals(BaseManager.campoToLowerCase(LocalidadPeer.PROVINCIA_ID)))
		{
			if(condicion.equals(BaseQuery.SingleQuery.EQUAL_CONDITION))
				criterion = TorqueUtils.addOrEqualCriteria(criterion,LocalidadPeer.PROVINCIA_ID,valor,true);
			else if (condicion.equals(BaseQuery.SingleQuery.LIKE_CONDITION))
				criterion = TorqueUtils.addOrLikeCriteria(criterion,LocalidadPeer.PROVINCIA_ID,valor,true);
			else if (condicion.equals(BaseQuery.SingleQuery.LESS_CONDITION))
				criterion = TorqueUtils.addOrLessCriteria(criterion,LocalidadPeer.PROVINCIA_ID,valor,true);
			else if (condicion.equals(BaseQuery.SingleQuery.GREATER_CONDITION))
				criterion = TorqueUtils.addOrGreaterCriteria(criterion,LocalidadPeer.PROVINCIA_ID,valor,true);
		}
					if(campo.equals("all") || campo.equals(BaseManager.campoToLowerCase(LocalidadPeer.NOMBRE)))
		{
			if(condicion.equals(BaseQuery.SingleQuery.EQUAL_CONDITION))
				criterion = TorqueUtils.addOrEqualCriteria(criterion,LocalidadPeer.NOMBRE,valor,true);
			else if (condicion.equals(BaseQuery.SingleQuery.LIKE_CONDITION))
				criterion = TorqueUtils.addOrLikeCriteria(criterion,LocalidadPeer.NOMBRE,valor,true);
			else if (condicion.equals(BaseQuery.SingleQuery.LESS_CONDITION))
				criterion = TorqueUtils.addOrLessCriteria(criterion,LocalidadPeer.NOMBRE,valor,true);
			else if (condicion.equals(BaseQuery.SingleQuery.GREATER_CONDITION))
				criterion = TorqueUtils.addOrGreaterCriteria(criterion,LocalidadPeer.NOMBRE,valor,true);
		}
													if(campo.equals("all") || campo.equals(BaseManager.campoToLowerCase(FormaPagoPeer.ID)))
		{
			if(condicion.equals(BaseQuery.SingleQuery.EQUAL_CONDITION))
				criterion = TorqueUtils.addOrEqualCriteria(criterion,FormaPagoPeer.ID,valor,true);
			else if (condicion.equals(BaseQuery.SingleQuery.LIKE_CONDITION))
				criterion = TorqueUtils.addOrLikeCriteria(criterion,FormaPagoPeer.ID,valor,true);
			else if (condicion.equals(BaseQuery.SingleQuery.LESS_CONDITION))
				criterion = TorqueUtils.addOrLessCriteria(criterion,FormaPagoPeer.ID,valor,true);
			else if (condicion.equals(BaseQuery.SingleQuery.GREATER_CONDITION))
				criterion = TorqueUtils.addOrGreaterCriteria(criterion,FormaPagoPeer.ID,valor,true);
		}
					if(campo.equals("all") || campo.equals(BaseManager.campoToLowerCase(FormaPagoPeer.NOMBRE)))
		{
			if(condicion.equals(BaseQuery.SingleQuery.EQUAL_CONDITION))
				criterion = TorqueUtils.addOrEqualCriteria(criterion,FormaPagoPeer.NOMBRE,valor,true);
			else if (condicion.equals(BaseQuery.SingleQuery.LIKE_CONDITION))
				criterion = TorqueUtils.addOrLikeCriteria(criterion,FormaPagoPeer.NOMBRE,valor,true);
			else if (condicion.equals(BaseQuery.SingleQuery.LESS_CONDITION))
				criterion = TorqueUtils.addOrLessCriteria(criterion,FormaPagoPeer.NOMBRE,valor,true);
			else if (condicion.equals(BaseQuery.SingleQuery.GREATER_CONDITION))
				criterion = TorqueUtils.addOrGreaterCriteria(criterion,FormaPagoPeer.NOMBRE,valor,true);
		}
						
		return criterion;
	}

	public static final ClienteGroupBean getClientes() {
    	return BaseClienteManager.getClientes(false);
	}

	public static final ClienteGroupBean getClientes(boolean paginado) {
    	return BaseClienteManager.getClientes(new Criteria(), paginado,0);
	}

	public static final ClienteGroupBean getClientes(Criteria c) {
		return BaseClienteManager.getClientes(c,false,0);
	}

	public static final ClienteGroupBean getClientes(Criteria criteria,boolean paginado, int pagina) {
		ClienteGroupBean objClienteGroupBean = new ClienteGroupBean();
		objClienteGroupBean.setPaginaActual(pagina);
		objClienteGroupBean.setClientes(criteria, paginado);
		return objClienteGroupBean;
	}

							
	public static final Cliente getCliente(int id_Id) {
		Criteria c = new Criteria();
			c.add(ClientePeer.ID, id_Id);
			return BaseClienteManager.ClientesGroupBean2Cliente(BaseClienteManager.getClientes(c));
	}

	public static final Cliente ClientesGroupBean2Cliente(ClienteGroupBean obj){
		if(obj.size() == 1)
			return obj.getCliente(0);
		else
			return null;
	}

	private static void updateClienteAttribute(int id_Id, String valor, String campo) throws Exception
	{
		Cliente obj = BaseClienteManager.getCliente(id_Id);
			if(campo.equals(ClientePeer.ID))
					obj.setId(Integer.parseInt(valor)); //int
					if(campo.equals(ClientePeer.NOMBRE))
					obj.setNombre(valor); //String
					if(campo.equals(ClientePeer.NOMBRECOMERCIAL))
					obj.setNombreComercial(valor); //String
					if(campo.equals(ClientePeer.RAZONSOCIAL))
					obj.setRazonSocial(valor); //String
					if(campo.equals(ClientePeer.NIF))
					obj.setNif(valor); //String
					if(campo.equals(ClientePeer.DIRECCION))
					obj.setDireccion(valor); //String
					if(campo.equals(ClientePeer.LOCALIDAD_ID))
					obj.setLocalidadId(Integer.parseInt(valor)); //int
					if(campo.equals(ClientePeer.CP))
					obj.setCp(valor); //String
					if(campo.equals(ClientePeer.TELEFONO))
					obj.setTlfno(valor); //String
					if(campo.equals(ClientePeer.MOVIL))
					obj.setMovil(valor); //String
					if(campo.equals(ClientePeer.FAX))
					obj.setFax(valor); //String
					if(campo.equals(ClientePeer.EMAIL))
					obj.setEmail(valor); //String
					if(campo.equals(ClientePeer.FORMA_PAGO_ID))
					obj.setFormaPagoId(Integer.parseInt(valor)); //int
					if(campo.equals(ClientePeer.NUMERO_CUENTA))
					obj.setNumeroCuenta(valor); //String
					if(campo.equals(ClientePeer.DTO_PRONTO_PAGO))
					obj.setDtoProntoPago(Integer.parseInt(valor)); //int
					if(campo.equals(ClientePeer.DIA_PAGO))
					obj.setDiaPago(Integer.parseInt(valor)); //int
					if(campo.equals(ClientePeer.OBSERVACION))
					obj.setObs(valor); //String
					obj.save();
	}

	public static void updateId(int id_Id, String valor) throws Exception
	{
		updateClienteAttribute(id_Id, valor, ClientePeer.ID);
	}
	public static void updateNombre(int id_Id, String valor) throws Exception
	{
		updateClienteAttribute(id_Id, valor, ClientePeer.NOMBRE);
	}
	public static void updateNombreComercial(int id_Id, String valor) throws Exception
	{
		updateClienteAttribute(id_Id, valor, ClientePeer.NOMBRECOMERCIAL);
	}
	public static void updateRazonSocial(int id_Id, String valor) throws Exception
	{
		updateClienteAttribute(id_Id, valor, ClientePeer.RAZONSOCIAL);
	}
	public static void updateNif(int id_Id, String valor) throws Exception
	{
		updateClienteAttribute(id_Id, valor, ClientePeer.NIF);
	}
	public static void updateDireccion(int id_Id, String valor) throws Exception
	{
		updateClienteAttribute(id_Id, valor, ClientePeer.DIRECCION);
	}
	public static void updateLocalidadId(int id_Id, String valor) throws Exception
	{
		updateClienteAttribute(id_Id, valor, ClientePeer.LOCALIDAD_ID);
	}
	public static void updateCp(int id_Id, String valor) throws Exception
	{
		updateClienteAttribute(id_Id, valor, ClientePeer.CP);
	}
	public static void updateTlfno(int id_Id, String valor) throws Exception
	{
		updateClienteAttribute(id_Id, valor, ClientePeer.TELEFONO);
	}
	public static void updateMovil(int id_Id, String valor) throws Exception
	{
		updateClienteAttribute(id_Id, valor, ClientePeer.MOVIL);
	}
	public static void updateFax(int id_Id, String valor) throws Exception
	{
		updateClienteAttribute(id_Id, valor, ClientePeer.FAX);
	}
	public static void updateEmail(int id_Id, String valor) throws Exception
	{
		updateClienteAttribute(id_Id, valor, ClientePeer.EMAIL);
	}
	public static void updateFormaPagoId(int id_Id, String valor) throws Exception
	{
		updateClienteAttribute(id_Id, valor, ClientePeer.FORMA_PAGO_ID);
	}
	public static void updateNumeroCuenta(int id_Id, String valor) throws Exception
	{
		updateClienteAttribute(id_Id, valor, ClientePeer.NUMERO_CUENTA);
	}
	public static void updateDtoProntoPago(int id_Id, String valor) throws Exception
	{
		updateClienteAttribute(id_Id, valor, ClientePeer.DTO_PRONTO_PAGO);
	}
	public static void updateDiaPago(int id_Id, String valor) throws Exception
	{
		updateClienteAttribute(id_Id, valor, ClientePeer.DIA_PAGO);
	}
	public static void updateObs(int id_Id, String valor) throws Exception
	{
		updateClienteAttribute(id_Id, valor, ClientePeer.OBSERVACION);
	}

					public void addJoins(Criteria criteria)
	{
																																																	criteria.addJoin(ClientePeer.LOCALIDAD_ID,LocalidadPeer.ID);
																																																													criteria.addJoin(ClientePeer.FORMA_PAGO_ID,FormaPagoPeer.ID);
															}
	

  public static void deleteCliente(int id_Id) throws TorqueException
  {
  	ClientePeer.doDelete(ClienteManager.getCliente(id_Id));
  }

  public static Cliente addUpdateCliente(Cliente obj) throws TorqueException
  {
	ClienteGroupBean gb = new ClienteGroupBean();
	gb.setElemento(obj);
	gb.save();
	return obj;
  }

}

