package net.idtoki.serteca.manager;

import net.idtoki.serteca.model.PrestamoPeer;
import net.idtoki.serteca.model.VehiculoCortesia;
import net.idtoki.serteca.model.VehiculoCortesiaPeer;

import org.apache.torque.TorqueException;
import org.apache.torque.util.Criteria;


/**
 * The skeleton for this class was autogenerated by Torque on:
 *
 * [Wed Feb 01 12:46:43 CET 2006]
 *
 *  You should add additional methods to this class to meet the
 *  application requirements.  This class will only be generated as
 *  long as it does not already exist in the output directory.
 */
public class PrestamoManager
    extends BasePrestamoManager
{
	
	public static boolean borraPrestamo(int idBorrar) {

		Criteria c=new Criteria();
		c.add(PrestamoPeer.ID, idBorrar);
		boolean bRet = false;
		 /*
		  * Bittor Gorostegi 2/05/2006
		  * Esta invocación realiza el cambio de estado de los vehículos de cortesía
		  * actualmente se realiza ya por triggers en la BBDD
		 VehiculoCortesia vc=VehiculoCortesiaManager.getVehiculoCortesia(pr.getVehiculoCortesiaId());
		 vc.comprobarEstadoVehiculoCortesia();
		 */

		try {
			 /*
			  * Bittor Gorostegi 2/05/2006
			  * Esta invocación realiza el cambio de estado de los vehículos de cortesía
			  * actualmente se realiza ya por triggers en la BBDD
			int idVehiculoCortesia;
			idVehiculoCortesia=PrestamoManager.getPrestamo(idBorrar).getVehiculoCortesiaId();
			*/
			PrestamoPeer.doDelete(c);
			bRet = true;
		 /*
		  * Bittor Gorostegi 2/05/2006
		  * Esta invocación realiza el cambio de estado de los vehículos de cortesía
		  * actualmente se realiza ya por triggers en la BBDD
			 VehiculoCortesia vc=VehiculoCortesiaManager.getVehiculoCortesia(idVehiculoCortesia);
			 vc.comprobarEstadoVehiculoCortesia();
			 */
		} catch (TorqueException e) {
			logger.info("No se ha podido borrar el VehiculoCortesia");
			e.printStackTrace();
			bRet = false;
		}
		return bRet;
	}	
	
}


