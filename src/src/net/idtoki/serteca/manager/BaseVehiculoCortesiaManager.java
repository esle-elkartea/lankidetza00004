package net.idtoki.serteca.manager;

import java.util.logging.Logger;
import net.idtoki.serteca.model.VehiculoCortesiaPeer;
import net.idtoki.serteca.group.VehiculoCortesiaGroupBean;
import net.idtoki.serteca.model.VehiculoCortesia;
import net.zylk.torque.SearchQuery;
import net.zylk.torque.BaseQuery;
import net.zylk.torque.TorqueUtils;
import net.zylk.torque.manager.BaseManager;
import org.apache.torque.TorqueException;
import java.util.Enumeration;


import net.idtoki.serteca.model.Modelo;
import net.idtoki.serteca.model.ModeloPeer;

import org.apache.torque.util.Criteria;
import org.apache.torque.util.UniqueList;
import net.zylk.tools.ajax.AjaxUtils.DinamicGridBean;

/**
 * This class was autogenerated by Torque on:
 *
 * [Mon Jul 03 11:03:24 CEST 2006]
 *
 */
public abstract class BaseVehiculoCortesiaManager extends BaseManager
{
	protected static final Logger logger = Logger.getLogger(
	   "net.idtoki.serteca.managers.BaseVehiculoCortesiaManager");

	public static final Criteria buildSearchCriteria(DinamicGridBean dgb)
	{
		return BaseManager.buildSearchCriteria(dgb, new VehiculoCortesiaManager());
	}

	public static final Criteria buildSearchCriteria(String query, int offset, int limit)
	{
		return BaseManager.buildSearchCriteria(query, offset, limit, new VehiculoCortesiaManager());
	}

	public static final Criteria buildSearchCriteria(String query)
	{
		return BaseManager.buildSearchCriteria(query, new VehiculoCortesiaManager());
	}

	protected void addOrSearchCriteria(Criteria criteria,String campo,String valor, String condicion){
		Criteria.Criterion criterion = VehiculoCortesiaManager.getSearchCriterion(campo,valor, condicion);
		//Si existe ya un criterion hay que utilizarlo para añadir el or sino utilizará un and
		Enumeration enumeration =criteria.elements();
		if(enumeration.hasMoreElements()){
			Criteria.Criterion cr = (Criteria.Criterion) enumeration.nextElement();
			cr.or(criterion);
		}else{
			criteria.or(criterion);
		}
	}

	protected void addAndSearchCriteria(Criteria criteria,String campo, String valor, String condicion){
		Criteria.Criterion criterion = VehiculoCortesiaManager.getSearchCriterion(campo,valor, condicion);
		criteria.and(criterion);
	}

	protected static Criteria.Criterion getSearchCriterion(String campo,String valor, String condicion){
        Criteria criteria =  new Criteria();
        Criteria.Criterion criterion = null;

			if(campo.equals("all") || campo.equals(BaseManager.campoToLowerCase(VehiculoCortesiaPeer.ID)))
		{
			if(condicion.equals(BaseQuery.SingleQuery.EQUAL_CONDITION))
				criterion = TorqueUtils.addOrEqualCriteria(criterion,VehiculoCortesiaPeer.ID,valor,true);
			else if (condicion.equals(BaseQuery.SingleQuery.LIKE_CONDITION))
				criterion = TorqueUtils.addOrLikeCriteria(criterion,VehiculoCortesiaPeer.ID,valor,true);
			else if (condicion.equals(BaseQuery.SingleQuery.LESS_CONDITION))
				criterion = TorqueUtils.addOrLessCriteria(criterion,VehiculoCortesiaPeer.ID,valor,true);
			else if (condicion.equals(BaseQuery.SingleQuery.GREATER_CONDITION))
				criterion = TorqueUtils.addOrGreaterCriteria(criterion,VehiculoCortesiaPeer.ID,valor,true);
		}
			if(campo.equals("all") || campo.equals(BaseManager.campoToLowerCase(VehiculoCortesiaPeer.MODELO_ID)))
		{
			if(condicion.equals(BaseQuery.SingleQuery.EQUAL_CONDITION))
				criterion = TorqueUtils.addOrEqualCriteria(criterion,VehiculoCortesiaPeer.MODELO_ID,valor,true);
			else if (condicion.equals(BaseQuery.SingleQuery.LIKE_CONDITION))
				criterion = TorqueUtils.addOrLikeCriteria(criterion,VehiculoCortesiaPeer.MODELO_ID,valor,true);
			else if (condicion.equals(BaseQuery.SingleQuery.LESS_CONDITION))
				criterion = TorqueUtils.addOrLessCriteria(criterion,VehiculoCortesiaPeer.MODELO_ID,valor,true);
			else if (condicion.equals(BaseQuery.SingleQuery.GREATER_CONDITION))
				criterion = TorqueUtils.addOrGreaterCriteria(criterion,VehiculoCortesiaPeer.MODELO_ID,valor,true);
		}
			if(campo.equals("all") || campo.equals(BaseManager.campoToLowerCase(VehiculoCortesiaPeer.CHASIS_ID)))
		{
			if(condicion.equals(BaseQuery.SingleQuery.EQUAL_CONDITION))
				criterion = TorqueUtils.addOrEqualCriteria(criterion,VehiculoCortesiaPeer.CHASIS_ID,valor,true);
			else if (condicion.equals(BaseQuery.SingleQuery.LIKE_CONDITION))
				criterion = TorqueUtils.addOrLikeCriteria(criterion,VehiculoCortesiaPeer.CHASIS_ID,valor,true);
			else if (condicion.equals(BaseQuery.SingleQuery.LESS_CONDITION))
				criterion = TorqueUtils.addOrLessCriteria(criterion,VehiculoCortesiaPeer.CHASIS_ID,valor,true);
			else if (condicion.equals(BaseQuery.SingleQuery.GREATER_CONDITION))
				criterion = TorqueUtils.addOrGreaterCriteria(criterion,VehiculoCortesiaPeer.CHASIS_ID,valor,true);
		}
			if(campo.equals("all") || campo.equals(BaseManager.campoToLowerCase(VehiculoCortesiaPeer.VERSION)))
		{
			if(condicion.equals(BaseQuery.SingleQuery.EQUAL_CONDITION))
				criterion = TorqueUtils.addOrEqualCriteria(criterion,VehiculoCortesiaPeer.VERSION,valor,true);
			else if (condicion.equals(BaseQuery.SingleQuery.LIKE_CONDITION))
				criterion = TorqueUtils.addOrLikeCriteria(criterion,VehiculoCortesiaPeer.VERSION,valor,true);
			else if (condicion.equals(BaseQuery.SingleQuery.LESS_CONDITION))
				criterion = TorqueUtils.addOrLessCriteria(criterion,VehiculoCortesiaPeer.VERSION,valor,true);
			else if (condicion.equals(BaseQuery.SingleQuery.GREATER_CONDITION))
				criterion = TorqueUtils.addOrGreaterCriteria(criterion,VehiculoCortesiaPeer.VERSION,valor,true);
		}
			if(campo.equals("all") || campo.equals(BaseManager.campoToLowerCase(VehiculoCortesiaPeer.MATRICULA)))
		{
			if(condicion.equals(BaseQuery.SingleQuery.EQUAL_CONDITION))
				criterion = TorqueUtils.addOrEqualCriteria(criterion,VehiculoCortesiaPeer.MATRICULA,valor,true);
			else if (condicion.equals(BaseQuery.SingleQuery.LIKE_CONDITION))
				criterion = TorqueUtils.addOrLikeCriteria(criterion,VehiculoCortesiaPeer.MATRICULA,valor,true);
			else if (condicion.equals(BaseQuery.SingleQuery.LESS_CONDITION))
				criterion = TorqueUtils.addOrLessCriteria(criterion,VehiculoCortesiaPeer.MATRICULA,valor,true);
			else if (condicion.equals(BaseQuery.SingleQuery.GREATER_CONDITION))
				criterion = TorqueUtils.addOrGreaterCriteria(criterion,VehiculoCortesiaPeer.MATRICULA,valor,true);
		}
			if(campo.equals("all") || campo.equals(BaseManager.campoToLowerCase(VehiculoCortesiaPeer.COLOR)))
		{
			if(condicion.equals(BaseQuery.SingleQuery.EQUAL_CONDITION))
				criterion = TorqueUtils.addOrEqualCriteria(criterion,VehiculoCortesiaPeer.COLOR,valor,true);
			else if (condicion.equals(BaseQuery.SingleQuery.LIKE_CONDITION))
				criterion = TorqueUtils.addOrLikeCriteria(criterion,VehiculoCortesiaPeer.COLOR,valor,true);
			else if (condicion.equals(BaseQuery.SingleQuery.LESS_CONDITION))
				criterion = TorqueUtils.addOrLessCriteria(criterion,VehiculoCortesiaPeer.COLOR,valor,true);
			else if (condicion.equals(BaseQuery.SingleQuery.GREATER_CONDITION))
				criterion = TorqueUtils.addOrGreaterCriteria(criterion,VehiculoCortesiaPeer.COLOR,valor,true);
		}
			if(campo.equals("all") || campo.equals(BaseManager.campoToLowerCase(VehiculoCortesiaPeer.OBSERVACION)))
		{
			if(condicion.equals(BaseQuery.SingleQuery.EQUAL_CONDITION))
				criterion = TorqueUtils.addOrEqualCriteria(criterion,VehiculoCortesiaPeer.OBSERVACION,valor,true);
			else if (condicion.equals(BaseQuery.SingleQuery.LIKE_CONDITION))
				criterion = TorqueUtils.addOrLikeCriteria(criterion,VehiculoCortesiaPeer.OBSERVACION,valor,true);
			else if (condicion.equals(BaseQuery.SingleQuery.LESS_CONDITION))
				criterion = TorqueUtils.addOrLessCriteria(criterion,VehiculoCortesiaPeer.OBSERVACION,valor,true);
			else if (condicion.equals(BaseQuery.SingleQuery.GREATER_CONDITION))
				criterion = TorqueUtils.addOrGreaterCriteria(criterion,VehiculoCortesiaPeer.OBSERVACION,valor,true);
		}
			if(campo.equals("all") || campo.equals(BaseManager.campoToLowerCase(VehiculoCortesiaPeer.ESTADO)))
		{
			if(condicion.equals(BaseQuery.SingleQuery.EQUAL_CONDITION))
				criterion = TorqueUtils.addOrEqualCriteria(criterion,VehiculoCortesiaPeer.ESTADO,valor,true);
			else if (condicion.equals(BaseQuery.SingleQuery.LIKE_CONDITION))
				criterion = TorqueUtils.addOrLikeCriteria(criterion,VehiculoCortesiaPeer.ESTADO,valor,true);
			else if (condicion.equals(BaseQuery.SingleQuery.LESS_CONDITION))
				criterion = TorqueUtils.addOrLessCriteria(criterion,VehiculoCortesiaPeer.ESTADO,valor,true);
			else if (condicion.equals(BaseQuery.SingleQuery.GREATER_CONDITION))
				criterion = TorqueUtils.addOrGreaterCriteria(criterion,VehiculoCortesiaPeer.ESTADO,valor,true);
		}
									if(campo.equals("all") || campo.equals(BaseManager.campoToLowerCase(ModeloPeer.ID)))
		{
			if(condicion.equals(BaseQuery.SingleQuery.EQUAL_CONDITION))
				criterion = TorqueUtils.addOrEqualCriteria(criterion,ModeloPeer.ID,valor,true);
			else if (condicion.equals(BaseQuery.SingleQuery.LIKE_CONDITION))
				criterion = TorqueUtils.addOrLikeCriteria(criterion,ModeloPeer.ID,valor,true);
			else if (condicion.equals(BaseQuery.SingleQuery.LESS_CONDITION))
				criterion = TorqueUtils.addOrLessCriteria(criterion,ModeloPeer.ID,valor,true);
			else if (condicion.equals(BaseQuery.SingleQuery.GREATER_CONDITION))
				criterion = TorqueUtils.addOrGreaterCriteria(criterion,ModeloPeer.ID,valor,true);
		}
					if(campo.equals("all") || campo.equals(BaseManager.campoToLowerCase(ModeloPeer.NOMBRE)))
		{
			if(condicion.equals(BaseQuery.SingleQuery.EQUAL_CONDITION))
				criterion = TorqueUtils.addOrEqualCriteria(criterion,ModeloPeer.NOMBRE,valor,true);
			else if (condicion.equals(BaseQuery.SingleQuery.LIKE_CONDITION))
				criterion = TorqueUtils.addOrLikeCriteria(criterion,ModeloPeer.NOMBRE,valor,true);
			else if (condicion.equals(BaseQuery.SingleQuery.LESS_CONDITION))
				criterion = TorqueUtils.addOrLessCriteria(criterion,ModeloPeer.NOMBRE,valor,true);
			else if (condicion.equals(BaseQuery.SingleQuery.GREATER_CONDITION))
				criterion = TorqueUtils.addOrGreaterCriteria(criterion,ModeloPeer.NOMBRE,valor,true);
		}
					if(campo.equals("all") || campo.equals(BaseManager.campoToLowerCase(ModeloPeer.MARCA_ID)))
		{
			if(condicion.equals(BaseQuery.SingleQuery.EQUAL_CONDITION))
				criterion = TorqueUtils.addOrEqualCriteria(criterion,ModeloPeer.MARCA_ID,valor,true);
			else if (condicion.equals(BaseQuery.SingleQuery.LIKE_CONDITION))
				criterion = TorqueUtils.addOrLikeCriteria(criterion,ModeloPeer.MARCA_ID,valor,true);
			else if (condicion.equals(BaseQuery.SingleQuery.LESS_CONDITION))
				criterion = TorqueUtils.addOrLessCriteria(criterion,ModeloPeer.MARCA_ID,valor,true);
			else if (condicion.equals(BaseQuery.SingleQuery.GREATER_CONDITION))
				criterion = TorqueUtils.addOrGreaterCriteria(criterion,ModeloPeer.MARCA_ID,valor,true);
		}
						
		return criterion;
	}

	public static final VehiculoCortesiaGroupBean getVehiculoCortesias() {
    	return BaseVehiculoCortesiaManager.getVehiculoCortesias(false);
	}

	public static final VehiculoCortesiaGroupBean getVehiculoCortesias(boolean paginado) {
    	return BaseVehiculoCortesiaManager.getVehiculoCortesias(new Criteria(), paginado,0);
	}

	public static final VehiculoCortesiaGroupBean getVehiculoCortesias(Criteria c) {
		return BaseVehiculoCortesiaManager.getVehiculoCortesias(c,false,0);
	}

	public static final VehiculoCortesiaGroupBean getVehiculoCortesias(Criteria criteria,boolean paginado, int pagina) {
		VehiculoCortesiaGroupBean objVehiculoCortesiaGroupBean = new VehiculoCortesiaGroupBean();
		objVehiculoCortesiaGroupBean.setPaginaActual(pagina);
		objVehiculoCortesiaGroupBean.setVehiculoCortesias(criteria, paginado);
		return objVehiculoCortesiaGroupBean;
	}

							
	public static final VehiculoCortesia getVehiculoCortesia(int id_Id) {
		Criteria c = new Criteria();
			c.add(VehiculoCortesiaPeer.ID, id_Id);
			return BaseVehiculoCortesiaManager.VehiculoCortesiasGroupBean2VehiculoCortesia(BaseVehiculoCortesiaManager.getVehiculoCortesias(c));
	}

	public static final VehiculoCortesia VehiculoCortesiasGroupBean2VehiculoCortesia(VehiculoCortesiaGroupBean obj){
		if(obj.size() == 1)
			return obj.getVehiculoCortesia(0);
		else
			return null;
	}

	private static void updateVehiculoCortesiaAttribute(int id_Id, String valor, String campo) throws Exception
	{
		VehiculoCortesia obj = BaseVehiculoCortesiaManager.getVehiculoCortesia(id_Id);
			if(campo.equals(VehiculoCortesiaPeer.ID))
					obj.setId(Integer.parseInt(valor)); //int
					if(campo.equals(VehiculoCortesiaPeer.MODELO_ID))
					obj.setModeloId(Integer.parseInt(valor)); //int
					if(campo.equals(VehiculoCortesiaPeer.CHASIS_ID))
					obj.setChasisId(valor); //String
					if(campo.equals(VehiculoCortesiaPeer.VERSION))
					obj.setVersion(valor); //String
					if(campo.equals(VehiculoCortesiaPeer.MATRICULA))
					obj.setMatricula(valor); //String
					if(campo.equals(VehiculoCortesiaPeer.COLOR))
					obj.setColor(valor); //String
					if(campo.equals(VehiculoCortesiaPeer.OBSERVACION))
					obj.setObs(valor); //String
					if(campo.equals(VehiculoCortesiaPeer.ESTADO))
					obj.setEstado(Integer.parseInt(valor)); //int
					obj.save();
	}

	public static void updateId(int id_Id, String valor) throws Exception
	{
		updateVehiculoCortesiaAttribute(id_Id, valor, VehiculoCortesiaPeer.ID);
	}
	public static void updateModeloId(int id_Id, String valor) throws Exception
	{
		updateVehiculoCortesiaAttribute(id_Id, valor, VehiculoCortesiaPeer.MODELO_ID);
	}
	public static void updateChasisId(int id_Id, String valor) throws Exception
	{
		updateVehiculoCortesiaAttribute(id_Id, valor, VehiculoCortesiaPeer.CHASIS_ID);
	}
	public static void updateVersion(int id_Id, String valor) throws Exception
	{
		updateVehiculoCortesiaAttribute(id_Id, valor, VehiculoCortesiaPeer.VERSION);
	}
	public static void updateMatricula(int id_Id, String valor) throws Exception
	{
		updateVehiculoCortesiaAttribute(id_Id, valor, VehiculoCortesiaPeer.MATRICULA);
	}
	public static void updateColor(int id_Id, String valor) throws Exception
	{
		updateVehiculoCortesiaAttribute(id_Id, valor, VehiculoCortesiaPeer.COLOR);
	}
	public static void updateObs(int id_Id, String valor) throws Exception
	{
		updateVehiculoCortesiaAttribute(id_Id, valor, VehiculoCortesiaPeer.OBSERVACION);
	}
	public static void updateEstado(int id_Id, String valor) throws Exception
	{
		updateVehiculoCortesiaAttribute(id_Id, valor, VehiculoCortesiaPeer.ESTADO);
	}

				public void addJoins(Criteria criteria)
	{
																																																	criteria.addJoin(VehiculoCortesiaPeer.MODELO_ID,ModeloPeer.ID);
															}
	

  public static void deleteVehiculoCortesia(int id_Id) throws TorqueException
  {
  	VehiculoCortesiaPeer.doDelete(VehiculoCortesiaManager.getVehiculoCortesia(id_Id));
  }

  public static VehiculoCortesia addUpdateVehiculoCortesia(VehiculoCortesia obj) throws TorqueException
  {
	VehiculoCortesiaGroupBean gb = new VehiculoCortesiaGroupBean();
	gb.setElemento(obj);
	gb.save();
	return obj;
  }

}

