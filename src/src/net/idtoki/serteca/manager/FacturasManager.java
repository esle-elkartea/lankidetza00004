package net.idtoki.serteca.manager;

import net.idtoki.serteca.model.ClientePeer;
import net.idtoki.serteca.model.FacturasPeer;
import net.idtoki.serteca.model.LineaFacturaPeer;

import org.apache.torque.TorqueException;
import org.apache.torque.util.Criteria;

import com.workingdogs.village.Record;
import com.workingdogs.village.DataSetException;


/**
 * The skeleton for this class was autogenerated by Torque on:
 *
 * [Wed Feb 01 12:46:43 CET 2006]
 *
 *  You should add additional methods to this class to meet the
 *  application requirements.  This class will only be generated as
 *  long as it does not already exist in the output directory.
 */
public class FacturasManager
    extends BaseFacturasManager
{
	
	public static boolean borraFactura(int idBorrar) {

		Criteria c=new Criteria();
		c.add(FacturasPeer.ID, idBorrar);
		boolean bRet = false;
		try {
			FacturasPeer.doDelete(c);
			bRet = true;
		} catch (TorqueException e) {
			logger.info("No se ha podido borrar la Factura");
			e.printStackTrace();
			bRet = false;
		}
		return bRet;
	}
	
	public static double getImporteCalculadoFacturas(int idFactura) throws TorqueException,DataSetException
	{
		Criteria c=new Criteria();
		c.add(FacturasPeer.ID, idFactura);	
		c.addJoin(LineaFacturaPeer.FACTURA_ID, FacturasPeer.ID);
		c.addSelectColumn("SUM(" + LineaFacturaPeer.IMPORTE+ "*" + LineaFacturaPeer.UNIDADES+ "-(" + LineaFacturaPeer.IMPORTE + "*" + LineaFacturaPeer.UNIDADES+ "*" + LineaFacturaPeer.DTO+ "/100))");
		  java.util.List result = LineaFacturaPeer.doSelectVillageRecords(c);
		  com.workingdogs.village.Record record = (com.workingdogs.village.Record) result.get(0);
		  return record.getValue(1).asDouble();		
	}
}


