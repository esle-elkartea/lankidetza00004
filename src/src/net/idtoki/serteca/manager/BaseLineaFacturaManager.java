package net.idtoki.serteca.manager;

import java.util.logging.Logger;
import net.idtoki.serteca.model.LineaFacturaPeer;
import net.idtoki.serteca.group.LineaFacturaGroupBean;
import net.idtoki.serteca.model.LineaFactura;
import net.zylk.torque.SearchQuery;
import net.zylk.torque.BaseQuery;
import net.zylk.torque.TorqueUtils;
import net.zylk.torque.manager.BaseManager;
import org.apache.torque.TorqueException;
import java.util.Enumeration;


import net.idtoki.serteca.model.Facturas;
import net.idtoki.serteca.model.FacturasPeer;

import org.apache.torque.util.Criteria;
import org.apache.torque.util.UniqueList;
import net.zylk.tools.ajax.AjaxUtils.DinamicGridBean;

/**
 * This class was autogenerated by Torque on:
 *
 * [Mon Jul 03 11:03:24 CEST 2006]
 *
 */
public abstract class BaseLineaFacturaManager extends BaseManager
{
	protected static final Logger logger = Logger.getLogger(
	   "net.idtoki.serteca.managers.BaseLineaFacturaManager");

	public static final Criteria buildSearchCriteria(DinamicGridBean dgb)
	{
		return BaseManager.buildSearchCriteria(dgb, new LineaFacturaManager());
	}

	public static final Criteria buildSearchCriteria(String query, int offset, int limit)
	{
		return BaseManager.buildSearchCriteria(query, offset, limit, new LineaFacturaManager());
	}

	public static final Criteria buildSearchCriteria(String query)
	{
		return BaseManager.buildSearchCriteria(query, new LineaFacturaManager());
	}

	protected void addOrSearchCriteria(Criteria criteria,String campo,String valor, String condicion){
		Criteria.Criterion criterion = LineaFacturaManager.getSearchCriterion(campo,valor, condicion);
		//Si existe ya un criterion hay que utilizarlo para añadir el or sino utilizará un and
		Enumeration enumeration =criteria.elements();
		if(enumeration.hasMoreElements()){
			Criteria.Criterion cr = (Criteria.Criterion) enumeration.nextElement();
			cr.or(criterion);
		}else{
			criteria.or(criterion);
		}
	}

	protected void addAndSearchCriteria(Criteria criteria,String campo, String valor, String condicion){
		Criteria.Criterion criterion = LineaFacturaManager.getSearchCriterion(campo,valor, condicion);
		criteria.and(criterion);
	}

	protected static Criteria.Criterion getSearchCriterion(String campo,String valor, String condicion){
        Criteria criteria =  new Criteria();
        Criteria.Criterion criterion = null;

			if(campo.equals("all") || campo.equals(BaseManager.campoToLowerCase(LineaFacturaPeer.ID)))
		{
			if(condicion.equals(BaseQuery.SingleQuery.EQUAL_CONDITION))
				criterion = TorqueUtils.addOrEqualCriteria(criterion,LineaFacturaPeer.ID,valor,true);
			else if (condicion.equals(BaseQuery.SingleQuery.LIKE_CONDITION))
				criterion = TorqueUtils.addOrLikeCriteria(criterion,LineaFacturaPeer.ID,valor,true);
			else if (condicion.equals(BaseQuery.SingleQuery.LESS_CONDITION))
				criterion = TorqueUtils.addOrLessCriteria(criterion,LineaFacturaPeer.ID,valor,true);
			else if (condicion.equals(BaseQuery.SingleQuery.GREATER_CONDITION))
				criterion = TorqueUtils.addOrGreaterCriteria(criterion,LineaFacturaPeer.ID,valor,true);
		}
			if(campo.equals("all") || campo.equals(BaseManager.campoToLowerCase(LineaFacturaPeer.OBSERVACION)))
		{
			if(condicion.equals(BaseQuery.SingleQuery.EQUAL_CONDITION))
				criterion = TorqueUtils.addOrEqualCriteria(criterion,LineaFacturaPeer.OBSERVACION,valor,true);
			else if (condicion.equals(BaseQuery.SingleQuery.LIKE_CONDITION))
				criterion = TorqueUtils.addOrLikeCriteria(criterion,LineaFacturaPeer.OBSERVACION,valor,true);
			else if (condicion.equals(BaseQuery.SingleQuery.LESS_CONDITION))
				criterion = TorqueUtils.addOrLessCriteria(criterion,LineaFacturaPeer.OBSERVACION,valor,true);
			else if (condicion.equals(BaseQuery.SingleQuery.GREATER_CONDITION))
				criterion = TorqueUtils.addOrGreaterCriteria(criterion,LineaFacturaPeer.OBSERVACION,valor,true);
		}
			if(campo.equals("all") || campo.equals(BaseManager.campoToLowerCase(LineaFacturaPeer.FACTURA_ID)))
		{
			if(condicion.equals(BaseQuery.SingleQuery.EQUAL_CONDITION))
				criterion = TorqueUtils.addOrEqualCriteria(criterion,LineaFacturaPeer.FACTURA_ID,valor,true);
			else if (condicion.equals(BaseQuery.SingleQuery.LIKE_CONDITION))
				criterion = TorqueUtils.addOrLikeCriteria(criterion,LineaFacturaPeer.FACTURA_ID,valor,true);
			else if (condicion.equals(BaseQuery.SingleQuery.LESS_CONDITION))
				criterion = TorqueUtils.addOrLessCriteria(criterion,LineaFacturaPeer.FACTURA_ID,valor,true);
			else if (condicion.equals(BaseQuery.SingleQuery.GREATER_CONDITION))
				criterion = TorqueUtils.addOrGreaterCriteria(criterion,LineaFacturaPeer.FACTURA_ID,valor,true);
		}
			if(campo.equals("all") || campo.equals(BaseManager.campoToLowerCase(LineaFacturaPeer.IMPORTE)))
		{
			if(condicion.equals(BaseQuery.SingleQuery.EQUAL_CONDITION))
				criterion = TorqueUtils.addOrEqualCriteria(criterion,LineaFacturaPeer.IMPORTE,valor,true);
			else if (condicion.equals(BaseQuery.SingleQuery.LIKE_CONDITION))
				criterion = TorqueUtils.addOrLikeCriteria(criterion,LineaFacturaPeer.IMPORTE,valor,true);
			else if (condicion.equals(BaseQuery.SingleQuery.LESS_CONDITION))
				criterion = TorqueUtils.addOrLessCriteria(criterion,LineaFacturaPeer.IMPORTE,valor,true);
			else if (condicion.equals(BaseQuery.SingleQuery.GREATER_CONDITION))
				criterion = TorqueUtils.addOrGreaterCriteria(criterion,LineaFacturaPeer.IMPORTE,valor,true);
		}
			if(campo.equals("all") || campo.equals(BaseManager.campoToLowerCase(LineaFacturaPeer.UNIDADES)))
		{
			if(condicion.equals(BaseQuery.SingleQuery.EQUAL_CONDITION))
				criterion = TorqueUtils.addOrEqualCriteria(criterion,LineaFacturaPeer.UNIDADES,valor,true);
			else if (condicion.equals(BaseQuery.SingleQuery.LIKE_CONDITION))
				criterion = TorqueUtils.addOrLikeCriteria(criterion,LineaFacturaPeer.UNIDADES,valor,true);
			else if (condicion.equals(BaseQuery.SingleQuery.LESS_CONDITION))
				criterion = TorqueUtils.addOrLessCriteria(criterion,LineaFacturaPeer.UNIDADES,valor,true);
			else if (condicion.equals(BaseQuery.SingleQuery.GREATER_CONDITION))
				criterion = TorqueUtils.addOrGreaterCriteria(criterion,LineaFacturaPeer.UNIDADES,valor,true);
		}
			if(campo.equals("all") || campo.equals(BaseManager.campoToLowerCase(LineaFacturaPeer.DTO)))
		{
			if(condicion.equals(BaseQuery.SingleQuery.EQUAL_CONDITION))
				criterion = TorqueUtils.addOrEqualCriteria(criterion,LineaFacturaPeer.DTO,valor,true);
			else if (condicion.equals(BaseQuery.SingleQuery.LIKE_CONDITION))
				criterion = TorqueUtils.addOrLikeCriteria(criterion,LineaFacturaPeer.DTO,valor,true);
			else if (condicion.equals(BaseQuery.SingleQuery.LESS_CONDITION))
				criterion = TorqueUtils.addOrLessCriteria(criterion,LineaFacturaPeer.DTO,valor,true);
			else if (condicion.equals(BaseQuery.SingleQuery.GREATER_CONDITION))
				criterion = TorqueUtils.addOrGreaterCriteria(criterion,LineaFacturaPeer.DTO,valor,true);
		}
			if(campo.equals("all") || campo.equals(BaseManager.campoToLowerCase(LineaFacturaPeer.DESCRIPCION)))
		{
			if(condicion.equals(BaseQuery.SingleQuery.EQUAL_CONDITION))
				criterion = TorqueUtils.addOrEqualCriteria(criterion,LineaFacturaPeer.DESCRIPCION,valor,true);
			else if (condicion.equals(BaseQuery.SingleQuery.LIKE_CONDITION))
				criterion = TorqueUtils.addOrLikeCriteria(criterion,LineaFacturaPeer.DESCRIPCION,valor,true);
			else if (condicion.equals(BaseQuery.SingleQuery.LESS_CONDITION))
				criterion = TorqueUtils.addOrLessCriteria(criterion,LineaFacturaPeer.DESCRIPCION,valor,true);
			else if (condicion.equals(BaseQuery.SingleQuery.GREATER_CONDITION))
				criterion = TorqueUtils.addOrGreaterCriteria(criterion,LineaFacturaPeer.DESCRIPCION,valor,true);
		}
									if(campo.equals("all") || campo.equals(BaseManager.campoToLowerCase(FacturasPeer.ID)))
		{
			if(condicion.equals(BaseQuery.SingleQuery.EQUAL_CONDITION))
				criterion = TorqueUtils.addOrEqualCriteria(criterion,FacturasPeer.ID,valor,true);
			else if (condicion.equals(BaseQuery.SingleQuery.LIKE_CONDITION))
				criterion = TorqueUtils.addOrLikeCriteria(criterion,FacturasPeer.ID,valor,true);
			else if (condicion.equals(BaseQuery.SingleQuery.LESS_CONDITION))
				criterion = TorqueUtils.addOrLessCriteria(criterion,FacturasPeer.ID,valor,true);
			else if (condicion.equals(BaseQuery.SingleQuery.GREATER_CONDITION))
				criterion = TorqueUtils.addOrGreaterCriteria(criterion,FacturasPeer.ID,valor,true);
		}
					if(campo.equals("all") || campo.equals(BaseManager.campoToLowerCase(FacturasPeer.FECHA)))
		{
			if(condicion.equals(BaseQuery.SingleQuery.EQUAL_CONDITION))
				criterion = TorqueUtils.addOrEqualCriteria(criterion,FacturasPeer.FECHA,valor,true);
			else if (condicion.equals(BaseQuery.SingleQuery.LIKE_CONDITION))
				criterion = TorqueUtils.addOrLikeCriteria(criterion,FacturasPeer.FECHA,valor,true);
			else if (condicion.equals(BaseQuery.SingleQuery.LESS_CONDITION))
				criterion = TorqueUtils.addOrLessCriteria(criterion,FacturasPeer.FECHA,valor,true);
			else if (condicion.equals(BaseQuery.SingleQuery.GREATER_CONDITION))
				criterion = TorqueUtils.addOrGreaterCriteria(criterion,FacturasPeer.FECHA,valor,true);
		}
					if(campo.equals("all") || campo.equals(BaseManager.campoToLowerCase(FacturasPeer.IMPORTE)))
		{
			if(condicion.equals(BaseQuery.SingleQuery.EQUAL_CONDITION))
				criterion = TorqueUtils.addOrEqualCriteria(criterion,FacturasPeer.IMPORTE,valor,true);
			else if (condicion.equals(BaseQuery.SingleQuery.LIKE_CONDITION))
				criterion = TorqueUtils.addOrLikeCriteria(criterion,FacturasPeer.IMPORTE,valor,true);
			else if (condicion.equals(BaseQuery.SingleQuery.LESS_CONDITION))
				criterion = TorqueUtils.addOrLessCriteria(criterion,FacturasPeer.IMPORTE,valor,true);
			else if (condicion.equals(BaseQuery.SingleQuery.GREATER_CONDITION))
				criterion = TorqueUtils.addOrGreaterCriteria(criterion,FacturasPeer.IMPORTE,valor,true);
		}
					if(campo.equals("all") || campo.equals(BaseManager.campoToLowerCase(FacturasPeer.ESTADO)))
		{
			if(condicion.equals(BaseQuery.SingleQuery.EQUAL_CONDITION))
				criterion = TorqueUtils.addOrEqualCriteria(criterion,FacturasPeer.ESTADO,valor,true);
			else if (condicion.equals(BaseQuery.SingleQuery.LIKE_CONDITION))
				criterion = TorqueUtils.addOrLikeCriteria(criterion,FacturasPeer.ESTADO,valor,true);
			else if (condicion.equals(BaseQuery.SingleQuery.LESS_CONDITION))
				criterion = TorqueUtils.addOrLessCriteria(criterion,FacturasPeer.ESTADO,valor,true);
			else if (condicion.equals(BaseQuery.SingleQuery.GREATER_CONDITION))
				criterion = TorqueUtils.addOrGreaterCriteria(criterion,FacturasPeer.ESTADO,valor,true);
		}
					if(campo.equals("all") || campo.equals(BaseManager.campoToLowerCase(FacturasPeer.DESCRIPCION)))
		{
			if(condicion.equals(BaseQuery.SingleQuery.EQUAL_CONDITION))
				criterion = TorqueUtils.addOrEqualCriteria(criterion,FacturasPeer.DESCRIPCION,valor,true);
			else if (condicion.equals(BaseQuery.SingleQuery.LIKE_CONDITION))
				criterion = TorqueUtils.addOrLikeCriteria(criterion,FacturasPeer.DESCRIPCION,valor,true);
			else if (condicion.equals(BaseQuery.SingleQuery.LESS_CONDITION))
				criterion = TorqueUtils.addOrLessCriteria(criterion,FacturasPeer.DESCRIPCION,valor,true);
			else if (condicion.equals(BaseQuery.SingleQuery.GREATER_CONDITION))
				criterion = TorqueUtils.addOrGreaterCriteria(criterion,FacturasPeer.DESCRIPCION,valor,true);
		}
					if(campo.equals("all") || campo.equals(BaseManager.campoToLowerCase(FacturasPeer.OBSERVACION)))
		{
			if(condicion.equals(BaseQuery.SingleQuery.EQUAL_CONDITION))
				criterion = TorqueUtils.addOrEqualCriteria(criterion,FacturasPeer.OBSERVACION,valor,true);
			else if (condicion.equals(BaseQuery.SingleQuery.LIKE_CONDITION))
				criterion = TorqueUtils.addOrLikeCriteria(criterion,FacturasPeer.OBSERVACION,valor,true);
			else if (condicion.equals(BaseQuery.SingleQuery.LESS_CONDITION))
				criterion = TorqueUtils.addOrLessCriteria(criterion,FacturasPeer.OBSERVACION,valor,true);
			else if (condicion.equals(BaseQuery.SingleQuery.GREATER_CONDITION))
				criterion = TorqueUtils.addOrGreaterCriteria(criterion,FacturasPeer.OBSERVACION,valor,true);
		}
					if(campo.equals("all") || campo.equals(BaseManager.campoToLowerCase(FacturasPeer.CLIENTE_ID)))
		{
			if(condicion.equals(BaseQuery.SingleQuery.EQUAL_CONDITION))
				criterion = TorqueUtils.addOrEqualCriteria(criterion,FacturasPeer.CLIENTE_ID,valor,true);
			else if (condicion.equals(BaseQuery.SingleQuery.LIKE_CONDITION))
				criterion = TorqueUtils.addOrLikeCriteria(criterion,FacturasPeer.CLIENTE_ID,valor,true);
			else if (condicion.equals(BaseQuery.SingleQuery.LESS_CONDITION))
				criterion = TorqueUtils.addOrLessCriteria(criterion,FacturasPeer.CLIENTE_ID,valor,true);
			else if (condicion.equals(BaseQuery.SingleQuery.GREATER_CONDITION))
				criterion = TorqueUtils.addOrGreaterCriteria(criterion,FacturasPeer.CLIENTE_ID,valor,true);
		}
					if(campo.equals("all") || campo.equals(BaseManager.campoToLowerCase(FacturasPeer.REPARACION_ID)))
		{
			if(condicion.equals(BaseQuery.SingleQuery.EQUAL_CONDITION))
				criterion = TorqueUtils.addOrEqualCriteria(criterion,FacturasPeer.REPARACION_ID,valor,true);
			else if (condicion.equals(BaseQuery.SingleQuery.LIKE_CONDITION))
				criterion = TorqueUtils.addOrLikeCriteria(criterion,FacturasPeer.REPARACION_ID,valor,true);
			else if (condicion.equals(BaseQuery.SingleQuery.LESS_CONDITION))
				criterion = TorqueUtils.addOrLessCriteria(criterion,FacturasPeer.REPARACION_ID,valor,true);
			else if (condicion.equals(BaseQuery.SingleQuery.GREATER_CONDITION))
				criterion = TorqueUtils.addOrGreaterCriteria(criterion,FacturasPeer.REPARACION_ID,valor,true);
		}
						
		return criterion;
	}

	public static final LineaFacturaGroupBean getLineaFacturas() {
    	return BaseLineaFacturaManager.getLineaFacturas(false);
	}

	public static final LineaFacturaGroupBean getLineaFacturas(boolean paginado) {
    	return BaseLineaFacturaManager.getLineaFacturas(new Criteria(), paginado,0);
	}

	public static final LineaFacturaGroupBean getLineaFacturas(Criteria c) {
		return BaseLineaFacturaManager.getLineaFacturas(c,false,0);
	}

	public static final LineaFacturaGroupBean getLineaFacturas(Criteria criteria,boolean paginado, int pagina) {
		LineaFacturaGroupBean objLineaFacturaGroupBean = new LineaFacturaGroupBean();
		objLineaFacturaGroupBean.setPaginaActual(pagina);
		objLineaFacturaGroupBean.setLineaFacturas(criteria, paginado);
		return objLineaFacturaGroupBean;
	}

							
	public static final LineaFactura getLineaFactura(int id_Id) {
		Criteria c = new Criteria();
			c.add(LineaFacturaPeer.ID, id_Id);
			return BaseLineaFacturaManager.LineaFacturasGroupBean2LineaFactura(BaseLineaFacturaManager.getLineaFacturas(c));
	}

	public static final LineaFactura LineaFacturasGroupBean2LineaFactura(LineaFacturaGroupBean obj){
		if(obj.size() == 1)
			return obj.getLineaFactura(0);
		else
			return null;
	}

	private static void updateLineaFacturaAttribute(int id_Id, String valor, String campo) throws Exception
	{
		LineaFactura obj = BaseLineaFacturaManager.getLineaFactura(id_Id);
			if(campo.equals(LineaFacturaPeer.ID))
					obj.setId(Integer.parseInt(valor)); //int
					if(campo.equals(LineaFacturaPeer.OBSERVACION))
					obj.setObs(valor); //String
					if(campo.equals(LineaFacturaPeer.FACTURA_ID))
					obj.setFacturaId(Integer.parseInt(valor)); //int
					if(campo.equals(LineaFacturaPeer.IMPORTE))
					obj.setImporte(Double.parseDouble(valor)); //double
					if(campo.equals(LineaFacturaPeer.UNIDADES))
					obj.setUnidades(Double.parseDouble(valor)); //double
					if(campo.equals(LineaFacturaPeer.DTO))
					obj.setDto(Double.parseDouble(valor)); //double
					if(campo.equals(LineaFacturaPeer.DESCRIPCION))
					obj.setDescripcion(valor); //String
					obj.save();
	}

	public static void updateId(int id_Id, String valor) throws Exception
	{
		updateLineaFacturaAttribute(id_Id, valor, LineaFacturaPeer.ID);
	}
	public static void updateObs(int id_Id, String valor) throws Exception
	{
		updateLineaFacturaAttribute(id_Id, valor, LineaFacturaPeer.OBSERVACION);
	}
	public static void updateFacturaId(int id_Id, String valor) throws Exception
	{
		updateLineaFacturaAttribute(id_Id, valor, LineaFacturaPeer.FACTURA_ID);
	}
	public static void updateImporte(int id_Id, String valor) throws Exception
	{
		updateLineaFacturaAttribute(id_Id, valor, LineaFacturaPeer.IMPORTE);
	}
	public static void updateUnidades(int id_Id, String valor) throws Exception
	{
		updateLineaFacturaAttribute(id_Id, valor, LineaFacturaPeer.UNIDADES);
	}
	public static void updateDto(int id_Id, String valor) throws Exception
	{
		updateLineaFacturaAttribute(id_Id, valor, LineaFacturaPeer.DTO);
	}
	public static void updateDescripcion(int id_Id, String valor) throws Exception
	{
		updateLineaFacturaAttribute(id_Id, valor, LineaFacturaPeer.DESCRIPCION);
	}

				public void addJoins(Criteria criteria)
	{
																																																	criteria.addJoin(LineaFacturaPeer.FACTURA_ID,FacturasPeer.ID);
															}
	

  public static void deleteLineaFactura(int id_Id) throws TorqueException
  {
  	LineaFacturaPeer.doDelete(LineaFacturaManager.getLineaFactura(id_Id));
  }

  public static LineaFactura addUpdateLineaFactura(LineaFactura obj) throws TorqueException
  {
	LineaFacturaGroupBean gb = new LineaFacturaGroupBean();
	gb.setElemento(obj);
	gb.save();
	return obj;
  }

}

