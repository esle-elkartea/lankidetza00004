package net.idtoki.serteca.manager;

import java.util.List;

import net.idtoki.serteca.helper.ClienteHelper;
import net.idtoki.serteca.model.Cliente;
import net.idtoki.serteca.model.ClientePeer;
import net.idtoki.serteca.model.Facturas;
import net.idtoki.serteca.model.FacturasPeer;

import org.apache.torque.TorqueException;
import org.apache.torque.util.Criteria;


/**
 * The skeleton for this class was autogenerated by Torque on:
 *
 * [Wed Feb 01 12:46:43 CET 2006]
 *
 *  You should add additional methods to this class to meet the
 *  application requirements.  This class will only be generated as
 *  long as it does not already exist in the output directory.
 */
public class ClienteManager
    extends BaseClienteManager
{
	public static boolean borraCliente(int idBorrar) {

		Criteria c=new Criteria();
		c.add(ClientePeer.ID, idBorrar);
		boolean bRet = false;
		try {
			ClientePeer.doDelete(c);
			bRet = true;
		} catch (TorqueException e) {
			logger.info("No se ha podido borrar el Cleinte");
			e.printStackTrace();
			bRet = false;
		}
		return bRet;
	}
	
	public static float getImporteCobrado(int idCliente)
	{
		float importe=0;
		int i;
		Cliente cl=ClienteManager.getCliente(idCliente);
		Criteria c=new Criteria();
		c.and(FacturasPeer.ESTADO, 2);
		try {
			List elemFacturas=cl.getFacturass(c);
			if (elemFacturas.size()>0)
			{
				for (i=0;i<elemFacturas.size();i++)
				{
					Facturas ff=(Facturas)elemFacturas.get(i);
					importe+=ff.getImporte();
				}
			}	
		} catch (TorqueException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
		return importe;
	}
	public static float getImportePendiente(int idCliente)
	{
		float importe=0;
		int i;
		Cliente cl=ClienteManager.getCliente(idCliente);
		int [] estados={0,1};
		Criteria c=new Criteria();
		c.addIn(FacturasPeer.ESTADO,estados);
		try {
			List elemFacturas=cl.getFacturass(c);
			if (elemFacturas.size()>0)
			{
				for (i=0;i<elemFacturas.size();i++)
				{
					Facturas ff=(Facturas)elemFacturas.get(i);
					importe+=ff.getImporte();
				}
			}	
		} catch (TorqueException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
		return importe;
	}
	
}


