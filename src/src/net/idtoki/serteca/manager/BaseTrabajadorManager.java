package net.idtoki.serteca.manager;

import java.util.logging.Logger;
import net.idtoki.serteca.model.TrabajadorPeer;
import net.idtoki.serteca.group.TrabajadorGroupBean;
import net.idtoki.serteca.model.Trabajador;
import net.zylk.torque.SearchQuery;
import net.zylk.torque.BaseQuery;
import net.zylk.torque.TorqueUtils;
import net.zylk.torque.manager.BaseManager;
import org.apache.torque.TorqueException;
import java.util.Enumeration;


import net.idtoki.serteca.model.Localidad;
import net.idtoki.serteca.model.LocalidadPeer;
import net.idtoki.serteca.model.Categoria;
import net.idtoki.serteca.model.CategoriaPeer;

import org.apache.torque.util.Criteria;
import org.apache.torque.util.UniqueList;
import net.zylk.tools.ajax.AjaxUtils.DinamicGridBean;

/**
 * This class was autogenerated by Torque on:
 *
 * [Mon Jul 03 11:03:24 CEST 2006]
 *
 */
public abstract class BaseTrabajadorManager extends BaseManager
{
	protected static final Logger logger = Logger.getLogger(
	   "net.idtoki.serteca.managers.BaseTrabajadorManager");

	public static final Criteria buildSearchCriteria(DinamicGridBean dgb)
	{
		return BaseManager.buildSearchCriteria(dgb, new TrabajadorManager());
	}

	public static final Criteria buildSearchCriteria(String query, int offset, int limit)
	{
		return BaseManager.buildSearchCriteria(query, offset, limit, new TrabajadorManager());
	}

	public static final Criteria buildSearchCriteria(String query)
	{
		return BaseManager.buildSearchCriteria(query, new TrabajadorManager());
	}

	protected void addOrSearchCriteria(Criteria criteria,String campo,String valor, String condicion){
		Criteria.Criterion criterion = TrabajadorManager.getSearchCriterion(campo,valor, condicion);
		//Si existe ya un criterion hay que utilizarlo para añadir el or sino utilizará un and
		Enumeration enumeration =criteria.elements();
		if(enumeration.hasMoreElements()){
			Criteria.Criterion cr = (Criteria.Criterion) enumeration.nextElement();
			cr.or(criterion);
		}else{
			criteria.or(criterion);
		}
	}

	protected void addAndSearchCriteria(Criteria criteria,String campo, String valor, String condicion){
		Criteria.Criterion criterion = TrabajadorManager.getSearchCriterion(campo,valor, condicion);
		criteria.and(criterion);
	}

	protected static Criteria.Criterion getSearchCriterion(String campo,String valor, String condicion){
        Criteria criteria =  new Criteria();
        Criteria.Criterion criterion = null;

			if(campo.equals("all") || campo.equals(BaseManager.campoToLowerCase(TrabajadorPeer.ID)))
		{
			if(condicion.equals(BaseQuery.SingleQuery.EQUAL_CONDITION))
				criterion = TorqueUtils.addOrEqualCriteria(criterion,TrabajadorPeer.ID,valor,true);
			else if (condicion.equals(BaseQuery.SingleQuery.LIKE_CONDITION))
				criterion = TorqueUtils.addOrLikeCriteria(criterion,TrabajadorPeer.ID,valor,true);
			else if (condicion.equals(BaseQuery.SingleQuery.LESS_CONDITION))
				criterion = TorqueUtils.addOrLessCriteria(criterion,TrabajadorPeer.ID,valor,true);
			else if (condicion.equals(BaseQuery.SingleQuery.GREATER_CONDITION))
				criterion = TorqueUtils.addOrGreaterCriteria(criterion,TrabajadorPeer.ID,valor,true);
		}
			if(campo.equals("all") || campo.equals(BaseManager.campoToLowerCase(TrabajadorPeer.NUMERO)))
		{
			if(condicion.equals(BaseQuery.SingleQuery.EQUAL_CONDITION))
				criterion = TorqueUtils.addOrEqualCriteria(criterion,TrabajadorPeer.NUMERO,valor,true);
			else if (condicion.equals(BaseQuery.SingleQuery.LIKE_CONDITION))
				criterion = TorqueUtils.addOrLikeCriteria(criterion,TrabajadorPeer.NUMERO,valor,true);
			else if (condicion.equals(BaseQuery.SingleQuery.LESS_CONDITION))
				criterion = TorqueUtils.addOrLessCriteria(criterion,TrabajadorPeer.NUMERO,valor,true);
			else if (condicion.equals(BaseQuery.SingleQuery.GREATER_CONDITION))
				criterion = TorqueUtils.addOrGreaterCriteria(criterion,TrabajadorPeer.NUMERO,valor,true);
		}
			if(campo.equals("all") || campo.equals(BaseManager.campoToLowerCase(TrabajadorPeer.FECHA_ALTA)))
		{
			if(condicion.equals(BaseQuery.SingleQuery.EQUAL_CONDITION))
				criterion = TorqueUtils.addOrEqualCriteria(criterion,TrabajadorPeer.FECHA_ALTA,valor,true);
			else if (condicion.equals(BaseQuery.SingleQuery.LIKE_CONDITION))
				criterion = TorqueUtils.addOrLikeCriteria(criterion,TrabajadorPeer.FECHA_ALTA,valor,true);
			else if (condicion.equals(BaseQuery.SingleQuery.LESS_CONDITION))
				criterion = TorqueUtils.addOrLessCriteria(criterion,TrabajadorPeer.FECHA_ALTA,valor,true);
			else if (condicion.equals(BaseQuery.SingleQuery.GREATER_CONDITION))
				criterion = TorqueUtils.addOrGreaterCriteria(criterion,TrabajadorPeer.FECHA_ALTA,valor,true);
		}
			if(campo.equals("all") || campo.equals(BaseManager.campoToLowerCase(TrabajadorPeer.FECHA_BAJA)))
		{
			if(condicion.equals(BaseQuery.SingleQuery.EQUAL_CONDITION))
				criterion = TorqueUtils.addOrEqualCriteria(criterion,TrabajadorPeer.FECHA_BAJA,valor,true);
			else if (condicion.equals(BaseQuery.SingleQuery.LIKE_CONDITION))
				criterion = TorqueUtils.addOrLikeCriteria(criterion,TrabajadorPeer.FECHA_BAJA,valor,true);
			else if (condicion.equals(BaseQuery.SingleQuery.LESS_CONDITION))
				criterion = TorqueUtils.addOrLessCriteria(criterion,TrabajadorPeer.FECHA_BAJA,valor,true);
			else if (condicion.equals(BaseQuery.SingleQuery.GREATER_CONDITION))
				criterion = TorqueUtils.addOrGreaterCriteria(criterion,TrabajadorPeer.FECHA_BAJA,valor,true);
		}
			if(campo.equals("all") || campo.equals(BaseManager.campoToLowerCase(TrabajadorPeer.OBSERVACION)))
		{
			if(condicion.equals(BaseQuery.SingleQuery.EQUAL_CONDITION))
				criterion = TorqueUtils.addOrEqualCriteria(criterion,TrabajadorPeer.OBSERVACION,valor,true);
			else if (condicion.equals(BaseQuery.SingleQuery.LIKE_CONDITION))
				criterion = TorqueUtils.addOrLikeCriteria(criterion,TrabajadorPeer.OBSERVACION,valor,true);
			else if (condicion.equals(BaseQuery.SingleQuery.LESS_CONDITION))
				criterion = TorqueUtils.addOrLessCriteria(criterion,TrabajadorPeer.OBSERVACION,valor,true);
			else if (condicion.equals(BaseQuery.SingleQuery.GREATER_CONDITION))
				criterion = TorqueUtils.addOrGreaterCriteria(criterion,TrabajadorPeer.OBSERVACION,valor,true);
		}
			if(campo.equals("all") || campo.equals(BaseManager.campoToLowerCase(TrabajadorPeer.NOMBRE)))
		{
			if(condicion.equals(BaseQuery.SingleQuery.EQUAL_CONDITION))
				criterion = TorqueUtils.addOrEqualCriteria(criterion,TrabajadorPeer.NOMBRE,valor,true);
			else if (condicion.equals(BaseQuery.SingleQuery.LIKE_CONDITION))
				criterion = TorqueUtils.addOrLikeCriteria(criterion,TrabajadorPeer.NOMBRE,valor,true);
			else if (condicion.equals(BaseQuery.SingleQuery.LESS_CONDITION))
				criterion = TorqueUtils.addOrLessCriteria(criterion,TrabajadorPeer.NOMBRE,valor,true);
			else if (condicion.equals(BaseQuery.SingleQuery.GREATER_CONDITION))
				criterion = TorqueUtils.addOrGreaterCriteria(criterion,TrabajadorPeer.NOMBRE,valor,true);
		}
			if(campo.equals("all") || campo.equals(BaseManager.campoToLowerCase(TrabajadorPeer.APELLIDOS)))
		{
			if(condicion.equals(BaseQuery.SingleQuery.EQUAL_CONDITION))
				criterion = TorqueUtils.addOrEqualCriteria(criterion,TrabajadorPeer.APELLIDOS,valor,true);
			else if (condicion.equals(BaseQuery.SingleQuery.LIKE_CONDITION))
				criterion = TorqueUtils.addOrLikeCriteria(criterion,TrabajadorPeer.APELLIDOS,valor,true);
			else if (condicion.equals(BaseQuery.SingleQuery.LESS_CONDITION))
				criterion = TorqueUtils.addOrLessCriteria(criterion,TrabajadorPeer.APELLIDOS,valor,true);
			else if (condicion.equals(BaseQuery.SingleQuery.GREATER_CONDITION))
				criterion = TorqueUtils.addOrGreaterCriteria(criterion,TrabajadorPeer.APELLIDOS,valor,true);
		}
			if(campo.equals("all") || campo.equals(BaseManager.campoToLowerCase(TrabajadorPeer.APELLIDOSDOS)))
		{
			if(condicion.equals(BaseQuery.SingleQuery.EQUAL_CONDITION))
				criterion = TorqueUtils.addOrEqualCriteria(criterion,TrabajadorPeer.APELLIDOSDOS,valor,true);
			else if (condicion.equals(BaseQuery.SingleQuery.LIKE_CONDITION))
				criterion = TorqueUtils.addOrLikeCriteria(criterion,TrabajadorPeer.APELLIDOSDOS,valor,true);
			else if (condicion.equals(BaseQuery.SingleQuery.LESS_CONDITION))
				criterion = TorqueUtils.addOrLessCriteria(criterion,TrabajadorPeer.APELLIDOSDOS,valor,true);
			else if (condicion.equals(BaseQuery.SingleQuery.GREATER_CONDITION))
				criterion = TorqueUtils.addOrGreaterCriteria(criterion,TrabajadorPeer.APELLIDOSDOS,valor,true);
		}
			if(campo.equals("all") || campo.equals(BaseManager.campoToLowerCase(TrabajadorPeer.CIF)))
		{
			if(condicion.equals(BaseQuery.SingleQuery.EQUAL_CONDITION))
				criterion = TorqueUtils.addOrEqualCriteria(criterion,TrabajadorPeer.CIF,valor,true);
			else if (condicion.equals(BaseQuery.SingleQuery.LIKE_CONDITION))
				criterion = TorqueUtils.addOrLikeCriteria(criterion,TrabajadorPeer.CIF,valor,true);
			else if (condicion.equals(BaseQuery.SingleQuery.LESS_CONDITION))
				criterion = TorqueUtils.addOrLessCriteria(criterion,TrabajadorPeer.CIF,valor,true);
			else if (condicion.equals(BaseQuery.SingleQuery.GREATER_CONDITION))
				criterion = TorqueUtils.addOrGreaterCriteria(criterion,TrabajadorPeer.CIF,valor,true);
		}
			if(campo.equals("all") || campo.equals(BaseManager.campoToLowerCase(TrabajadorPeer.COSTEHORA)))
		{
			if(condicion.equals(BaseQuery.SingleQuery.EQUAL_CONDITION))
				criterion = TorqueUtils.addOrEqualCriteria(criterion,TrabajadorPeer.COSTEHORA,valor,true);
			else if (condicion.equals(BaseQuery.SingleQuery.LIKE_CONDITION))
				criterion = TorqueUtils.addOrLikeCriteria(criterion,TrabajadorPeer.COSTEHORA,valor,true);
			else if (condicion.equals(BaseQuery.SingleQuery.LESS_CONDITION))
				criterion = TorqueUtils.addOrLessCriteria(criterion,TrabajadorPeer.COSTEHORA,valor,true);
			else if (condicion.equals(BaseQuery.SingleQuery.GREATER_CONDITION))
				criterion = TorqueUtils.addOrGreaterCriteria(criterion,TrabajadorPeer.COSTEHORA,valor,true);
		}
			if(campo.equals("all") || campo.equals(BaseManager.campoToLowerCase(TrabajadorPeer.DIRECCION)))
		{
			if(condicion.equals(BaseQuery.SingleQuery.EQUAL_CONDITION))
				criterion = TorqueUtils.addOrEqualCriteria(criterion,TrabajadorPeer.DIRECCION,valor,true);
			else if (condicion.equals(BaseQuery.SingleQuery.LIKE_CONDITION))
				criterion = TorqueUtils.addOrLikeCriteria(criterion,TrabajadorPeer.DIRECCION,valor,true);
			else if (condicion.equals(BaseQuery.SingleQuery.LESS_CONDITION))
				criterion = TorqueUtils.addOrLessCriteria(criterion,TrabajadorPeer.DIRECCION,valor,true);
			else if (condicion.equals(BaseQuery.SingleQuery.GREATER_CONDITION))
				criterion = TorqueUtils.addOrGreaterCriteria(criterion,TrabajadorPeer.DIRECCION,valor,true);
		}
			if(campo.equals("all") || campo.equals(BaseManager.campoToLowerCase(TrabajadorPeer.LOCALIDAD_ID)))
		{
			if(condicion.equals(BaseQuery.SingleQuery.EQUAL_CONDITION))
				criterion = TorqueUtils.addOrEqualCriteria(criterion,TrabajadorPeer.LOCALIDAD_ID,valor,true);
			else if (condicion.equals(BaseQuery.SingleQuery.LIKE_CONDITION))
				criterion = TorqueUtils.addOrLikeCriteria(criterion,TrabajadorPeer.LOCALIDAD_ID,valor,true);
			else if (condicion.equals(BaseQuery.SingleQuery.LESS_CONDITION))
				criterion = TorqueUtils.addOrLessCriteria(criterion,TrabajadorPeer.LOCALIDAD_ID,valor,true);
			else if (condicion.equals(BaseQuery.SingleQuery.GREATER_CONDITION))
				criterion = TorqueUtils.addOrGreaterCriteria(criterion,TrabajadorPeer.LOCALIDAD_ID,valor,true);
		}
			if(campo.equals("all") || campo.equals(BaseManager.campoToLowerCase(TrabajadorPeer.CP)))
		{
			if(condicion.equals(BaseQuery.SingleQuery.EQUAL_CONDITION))
				criterion = TorqueUtils.addOrEqualCriteria(criterion,TrabajadorPeer.CP,valor,true);
			else if (condicion.equals(BaseQuery.SingleQuery.LIKE_CONDITION))
				criterion = TorqueUtils.addOrLikeCriteria(criterion,TrabajadorPeer.CP,valor,true);
			else if (condicion.equals(BaseQuery.SingleQuery.LESS_CONDITION))
				criterion = TorqueUtils.addOrLessCriteria(criterion,TrabajadorPeer.CP,valor,true);
			else if (condicion.equals(BaseQuery.SingleQuery.GREATER_CONDITION))
				criterion = TorqueUtils.addOrGreaterCriteria(criterion,TrabajadorPeer.CP,valor,true);
		}
			if(campo.equals("all") || campo.equals(BaseManager.campoToLowerCase(TrabajadorPeer.TELEFONO)))
		{
			if(condicion.equals(BaseQuery.SingleQuery.EQUAL_CONDITION))
				criterion = TorqueUtils.addOrEqualCriteria(criterion,TrabajadorPeer.TELEFONO,valor,true);
			else if (condicion.equals(BaseQuery.SingleQuery.LIKE_CONDITION))
				criterion = TorqueUtils.addOrLikeCriteria(criterion,TrabajadorPeer.TELEFONO,valor,true);
			else if (condicion.equals(BaseQuery.SingleQuery.LESS_CONDITION))
				criterion = TorqueUtils.addOrLessCriteria(criterion,TrabajadorPeer.TELEFONO,valor,true);
			else if (condicion.equals(BaseQuery.SingleQuery.GREATER_CONDITION))
				criterion = TorqueUtils.addOrGreaterCriteria(criterion,TrabajadorPeer.TELEFONO,valor,true);
		}
			if(campo.equals("all") || campo.equals(BaseManager.campoToLowerCase(TrabajadorPeer.MOVIL)))
		{
			if(condicion.equals(BaseQuery.SingleQuery.EQUAL_CONDITION))
				criterion = TorqueUtils.addOrEqualCriteria(criterion,TrabajadorPeer.MOVIL,valor,true);
			else if (condicion.equals(BaseQuery.SingleQuery.LIKE_CONDITION))
				criterion = TorqueUtils.addOrLikeCriteria(criterion,TrabajadorPeer.MOVIL,valor,true);
			else if (condicion.equals(BaseQuery.SingleQuery.LESS_CONDITION))
				criterion = TorqueUtils.addOrLessCriteria(criterion,TrabajadorPeer.MOVIL,valor,true);
			else if (condicion.equals(BaseQuery.SingleQuery.GREATER_CONDITION))
				criterion = TorqueUtils.addOrGreaterCriteria(criterion,TrabajadorPeer.MOVIL,valor,true);
		}
			if(campo.equals("all") || campo.equals(BaseManager.campoToLowerCase(TrabajadorPeer.EMAIL)))
		{
			if(condicion.equals(BaseQuery.SingleQuery.EQUAL_CONDITION))
				criterion = TorqueUtils.addOrEqualCriteria(criterion,TrabajadorPeer.EMAIL,valor,true);
			else if (condicion.equals(BaseQuery.SingleQuery.LIKE_CONDITION))
				criterion = TorqueUtils.addOrLikeCriteria(criterion,TrabajadorPeer.EMAIL,valor,true);
			else if (condicion.equals(BaseQuery.SingleQuery.LESS_CONDITION))
				criterion = TorqueUtils.addOrLessCriteria(criterion,TrabajadorPeer.EMAIL,valor,true);
			else if (condicion.equals(BaseQuery.SingleQuery.GREATER_CONDITION))
				criterion = TorqueUtils.addOrGreaterCriteria(criterion,TrabajadorPeer.EMAIL,valor,true);
		}
			if(campo.equals("all") || campo.equals(BaseManager.campoToLowerCase(TrabajadorPeer.CATEGORIA_ID)))
		{
			if(condicion.equals(BaseQuery.SingleQuery.EQUAL_CONDITION))
				criterion = TorqueUtils.addOrEqualCriteria(criterion,TrabajadorPeer.CATEGORIA_ID,valor,true);
			else if (condicion.equals(BaseQuery.SingleQuery.LIKE_CONDITION))
				criterion = TorqueUtils.addOrLikeCriteria(criterion,TrabajadorPeer.CATEGORIA_ID,valor,true);
			else if (condicion.equals(BaseQuery.SingleQuery.LESS_CONDITION))
				criterion = TorqueUtils.addOrLessCriteria(criterion,TrabajadorPeer.CATEGORIA_ID,valor,true);
			else if (condicion.equals(BaseQuery.SingleQuery.GREATER_CONDITION))
				criterion = TorqueUtils.addOrGreaterCriteria(criterion,TrabajadorPeer.CATEGORIA_ID,valor,true);
		}
									if(campo.equals("all") || campo.equals(BaseManager.campoToLowerCase(LocalidadPeer.ID)))
		{
			if(condicion.equals(BaseQuery.SingleQuery.EQUAL_CONDITION))
				criterion = TorqueUtils.addOrEqualCriteria(criterion,LocalidadPeer.ID,valor,true);
			else if (condicion.equals(BaseQuery.SingleQuery.LIKE_CONDITION))
				criterion = TorqueUtils.addOrLikeCriteria(criterion,LocalidadPeer.ID,valor,true);
			else if (condicion.equals(BaseQuery.SingleQuery.LESS_CONDITION))
				criterion = TorqueUtils.addOrLessCriteria(criterion,LocalidadPeer.ID,valor,true);
			else if (condicion.equals(BaseQuery.SingleQuery.GREATER_CONDITION))
				criterion = TorqueUtils.addOrGreaterCriteria(criterion,LocalidadPeer.ID,valor,true);
		}
					if(campo.equals("all") || campo.equals(BaseManager.campoToLowerCase(LocalidadPeer.PROVINCIA_ID)))
		{
			if(condicion.equals(BaseQuery.SingleQuery.EQUAL_CONDITION))
				criterion = TorqueUtils.addOrEqualCriteria(criterion,LocalidadPeer.PROVINCIA_ID,valor,true);
			else if (condicion.equals(BaseQuery.SingleQuery.LIKE_CONDITION))
				criterion = TorqueUtils.addOrLikeCriteria(criterion,LocalidadPeer.PROVINCIA_ID,valor,true);
			else if (condicion.equals(BaseQuery.SingleQuery.LESS_CONDITION))
				criterion = TorqueUtils.addOrLessCriteria(criterion,LocalidadPeer.PROVINCIA_ID,valor,true);
			else if (condicion.equals(BaseQuery.SingleQuery.GREATER_CONDITION))
				criterion = TorqueUtils.addOrGreaterCriteria(criterion,LocalidadPeer.PROVINCIA_ID,valor,true);
		}
					if(campo.equals("all") || campo.equals(BaseManager.campoToLowerCase(LocalidadPeer.NOMBRE)))
		{
			if(condicion.equals(BaseQuery.SingleQuery.EQUAL_CONDITION))
				criterion = TorqueUtils.addOrEqualCriteria(criterion,LocalidadPeer.NOMBRE,valor,true);
			else if (condicion.equals(BaseQuery.SingleQuery.LIKE_CONDITION))
				criterion = TorqueUtils.addOrLikeCriteria(criterion,LocalidadPeer.NOMBRE,valor,true);
			else if (condicion.equals(BaseQuery.SingleQuery.LESS_CONDITION))
				criterion = TorqueUtils.addOrLessCriteria(criterion,LocalidadPeer.NOMBRE,valor,true);
			else if (condicion.equals(BaseQuery.SingleQuery.GREATER_CONDITION))
				criterion = TorqueUtils.addOrGreaterCriteria(criterion,LocalidadPeer.NOMBRE,valor,true);
		}
													if(campo.equals("all") || campo.equals(BaseManager.campoToLowerCase(CategoriaPeer.ID)))
		{
			if(condicion.equals(BaseQuery.SingleQuery.EQUAL_CONDITION))
				criterion = TorqueUtils.addOrEqualCriteria(criterion,CategoriaPeer.ID,valor,true);
			else if (condicion.equals(BaseQuery.SingleQuery.LIKE_CONDITION))
				criterion = TorqueUtils.addOrLikeCriteria(criterion,CategoriaPeer.ID,valor,true);
			else if (condicion.equals(BaseQuery.SingleQuery.LESS_CONDITION))
				criterion = TorqueUtils.addOrLessCriteria(criterion,CategoriaPeer.ID,valor,true);
			else if (condicion.equals(BaseQuery.SingleQuery.GREATER_CONDITION))
				criterion = TorqueUtils.addOrGreaterCriteria(criterion,CategoriaPeer.ID,valor,true);
		}
					if(campo.equals("all") || campo.equals(BaseManager.campoToLowerCase(CategoriaPeer.NOMBRE)))
		{
			if(condicion.equals(BaseQuery.SingleQuery.EQUAL_CONDITION))
				criterion = TorqueUtils.addOrEqualCriteria(criterion,CategoriaPeer.NOMBRE,valor,true);
			else if (condicion.equals(BaseQuery.SingleQuery.LIKE_CONDITION))
				criterion = TorqueUtils.addOrLikeCriteria(criterion,CategoriaPeer.NOMBRE,valor,true);
			else if (condicion.equals(BaseQuery.SingleQuery.LESS_CONDITION))
				criterion = TorqueUtils.addOrLessCriteria(criterion,CategoriaPeer.NOMBRE,valor,true);
			else if (condicion.equals(BaseQuery.SingleQuery.GREATER_CONDITION))
				criterion = TorqueUtils.addOrGreaterCriteria(criterion,CategoriaPeer.NOMBRE,valor,true);
		}
						
		return criterion;
	}

	public static final TrabajadorGroupBean getTrabajadors() {
    	return BaseTrabajadorManager.getTrabajadors(false);
	}

	public static final TrabajadorGroupBean getTrabajadors(boolean paginado) {
    	return BaseTrabajadorManager.getTrabajadors(new Criteria(), paginado,0);
	}

	public static final TrabajadorGroupBean getTrabajadors(Criteria c) {
		return BaseTrabajadorManager.getTrabajadors(c,false,0);
	}

	public static final TrabajadorGroupBean getTrabajadors(Criteria criteria,boolean paginado, int pagina) {
		TrabajadorGroupBean objTrabajadorGroupBean = new TrabajadorGroupBean();
		objTrabajadorGroupBean.setPaginaActual(pagina);
		objTrabajadorGroupBean.setTrabajadors(criteria, paginado);
		return objTrabajadorGroupBean;
	}

							
	public static final Trabajador getTrabajador(int id_Id) {
		Criteria c = new Criteria();
			c.add(TrabajadorPeer.ID, id_Id);
			return BaseTrabajadorManager.TrabajadorsGroupBean2Trabajador(BaseTrabajadorManager.getTrabajadors(c));
	}

	public static final Trabajador TrabajadorsGroupBean2Trabajador(TrabajadorGroupBean obj){
		if(obj.size() == 1)
			return obj.getTrabajador(0);
		else
			return null;
	}

	private static void updateTrabajadorAttribute(int id_Id, String valor, String campo) throws Exception
	{
		Trabajador obj = BaseTrabajadorManager.getTrabajador(id_Id);
			if(campo.equals(TrabajadorPeer.ID))
					obj.setId(Integer.parseInt(valor)); //int
					if(campo.equals(TrabajadorPeer.NUMERO))
					obj.setNumero(valor); //String
					if(campo.equals(TrabajadorPeer.FECHA_ALTA))
					obj.setFechaAlta(valor); //String
					if(campo.equals(TrabajadorPeer.FECHA_BAJA))
					obj.setFechaBaja(valor); //String
					if(campo.equals(TrabajadorPeer.OBSERVACION))
					obj.setObs(valor); //String
					if(campo.equals(TrabajadorPeer.NOMBRE))
					obj.setNombre(valor); //String
					if(campo.equals(TrabajadorPeer.APELLIDOS))
					obj.setApellidos(valor); //String
					if(campo.equals(TrabajadorPeer.APELLIDOSDOS))
					obj.setApellidosDos(valor); //String
					if(campo.equals(TrabajadorPeer.CIF))
					obj.setCif(valor); //String
					if(campo.equals(TrabajadorPeer.COSTEHORA))
					obj.setCosteHora(Double.parseDouble(valor)); //double
					if(campo.equals(TrabajadorPeer.DIRECCION))
					obj.setDireccion(valor); //String
					if(campo.equals(TrabajadorPeer.LOCALIDAD_ID))
					obj.setLocalidadId(Integer.parseInt(valor)); //int
					if(campo.equals(TrabajadorPeer.CP))
					obj.setCp(valor); //String
					if(campo.equals(TrabajadorPeer.TELEFONO))
					obj.setTlfno(valor); //String
					if(campo.equals(TrabajadorPeer.MOVIL))
					obj.setMovil(valor); //String
					if(campo.equals(TrabajadorPeer.EMAIL))
					obj.setEmail(valor); //String
					if(campo.equals(TrabajadorPeer.CATEGORIA_ID))
					obj.setCategoriaId(Integer.parseInt(valor)); //int
					obj.save();
	}

	public static void updateId(int id_Id, String valor) throws Exception
	{
		updateTrabajadorAttribute(id_Id, valor, TrabajadorPeer.ID);
	}
	public static void updateNumero(int id_Id, String valor) throws Exception
	{
		updateTrabajadorAttribute(id_Id, valor, TrabajadorPeer.NUMERO);
	}
	public static void updateFechaAlta(int id_Id, String valor) throws Exception
	{
		updateTrabajadorAttribute(id_Id, valor, TrabajadorPeer.FECHA_ALTA);
	}
	public static void updateFechaBaja(int id_Id, String valor) throws Exception
	{
		updateTrabajadorAttribute(id_Id, valor, TrabajadorPeer.FECHA_BAJA);
	}
	public static void updateObs(int id_Id, String valor) throws Exception
	{
		updateTrabajadorAttribute(id_Id, valor, TrabajadorPeer.OBSERVACION);
	}
	public static void updateNombre(int id_Id, String valor) throws Exception
	{
		updateTrabajadorAttribute(id_Id, valor, TrabajadorPeer.NOMBRE);
	}
	public static void updateApellidos(int id_Id, String valor) throws Exception
	{
		updateTrabajadorAttribute(id_Id, valor, TrabajadorPeer.APELLIDOS);
	}
	public static void updateApellidosDos(int id_Id, String valor) throws Exception
	{
		updateTrabajadorAttribute(id_Id, valor, TrabajadorPeer.APELLIDOSDOS);
	}
	public static void updateCif(int id_Id, String valor) throws Exception
	{
		updateTrabajadorAttribute(id_Id, valor, TrabajadorPeer.CIF);
	}
	public static void updateCosteHora(int id_Id, String valor) throws Exception
	{
		updateTrabajadorAttribute(id_Id, valor, TrabajadorPeer.COSTEHORA);
	}
	public static void updateDireccion(int id_Id, String valor) throws Exception
	{
		updateTrabajadorAttribute(id_Id, valor, TrabajadorPeer.DIRECCION);
	}
	public static void updateLocalidadId(int id_Id, String valor) throws Exception
	{
		updateTrabajadorAttribute(id_Id, valor, TrabajadorPeer.LOCALIDAD_ID);
	}
	public static void updateCp(int id_Id, String valor) throws Exception
	{
		updateTrabajadorAttribute(id_Id, valor, TrabajadorPeer.CP);
	}
	public static void updateTlfno(int id_Id, String valor) throws Exception
	{
		updateTrabajadorAttribute(id_Id, valor, TrabajadorPeer.TELEFONO);
	}
	public static void updateMovil(int id_Id, String valor) throws Exception
	{
		updateTrabajadorAttribute(id_Id, valor, TrabajadorPeer.MOVIL);
	}
	public static void updateEmail(int id_Id, String valor) throws Exception
	{
		updateTrabajadorAttribute(id_Id, valor, TrabajadorPeer.EMAIL);
	}
	public static void updateCategoriaId(int id_Id, String valor) throws Exception
	{
		updateTrabajadorAttribute(id_Id, valor, TrabajadorPeer.CATEGORIA_ID);
	}

					public void addJoins(Criteria criteria)
	{
																																																	criteria.addJoin(TrabajadorPeer.LOCALIDAD_ID,LocalidadPeer.ID);
																																																													criteria.addJoin(TrabajadorPeer.CATEGORIA_ID,CategoriaPeer.ID);
															}
	

  public static void deleteTrabajador(int id_Id) throws TorqueException
  {
  	TrabajadorPeer.doDelete(TrabajadorManager.getTrabajador(id_Id));
  }

  public static Trabajador addUpdateTrabajador(Trabajador obj) throws TorqueException
  {
	TrabajadorGroupBean gb = new TrabajadorGroupBean();
	gb.setElemento(obj);
	gb.save();
	return obj;
  }

}

