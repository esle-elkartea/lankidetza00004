package net.idtoki.serteca.manager;

import java.util.logging.Logger;
import net.idtoki.serteca.model.ReparacionPeer;
import net.idtoki.serteca.group.ReparacionGroupBean;
import net.idtoki.serteca.model.Reparacion;
import net.zylk.torque.SearchQuery;
import net.zylk.torque.BaseQuery;
import net.zylk.torque.TorqueUtils;
import net.zylk.torque.manager.BaseManager;
import org.apache.torque.TorqueException;
import java.util.Enumeration;


import net.idtoki.serteca.model.Vehiculo;
import net.idtoki.serteca.model.VehiculoPeer;

import org.apache.torque.util.Criteria;
import org.apache.torque.util.UniqueList;
import net.zylk.tools.ajax.AjaxUtils.DinamicGridBean;

/**
 * This class was autogenerated by Torque on:
 *
 * [Mon Jul 03 11:03:24 CEST 2006]
 *
 */
public abstract class BaseReparacionManager extends BaseManager
{
	protected static final Logger logger = Logger.getLogger(
	   "net.idtoki.serteca.managers.BaseReparacionManager");

	public static final Criteria buildSearchCriteria(DinamicGridBean dgb)
	{
		return BaseManager.buildSearchCriteria(dgb, new ReparacionManager());
	}

	public static final Criteria buildSearchCriteria(String query, int offset, int limit)
	{
		return BaseManager.buildSearchCriteria(query, offset, limit, new ReparacionManager());
	}

	public static final Criteria buildSearchCriteria(String query)
	{
		return BaseManager.buildSearchCriteria(query, new ReparacionManager());
	}

	protected void addOrSearchCriteria(Criteria criteria,String campo,String valor, String condicion){
		Criteria.Criterion criterion = ReparacionManager.getSearchCriterion(campo,valor, condicion);
		//Si existe ya un criterion hay que utilizarlo para añadir el or sino utilizará un and
		Enumeration enumeration =criteria.elements();
		if(enumeration.hasMoreElements()){
			Criteria.Criterion cr = (Criteria.Criterion) enumeration.nextElement();
			cr.or(criterion);
		}else{
			criteria.or(criterion);
		}
	}

	protected void addAndSearchCriteria(Criteria criteria,String campo, String valor, String condicion){
		Criteria.Criterion criterion = ReparacionManager.getSearchCriterion(campo,valor, condicion);
		criteria.and(criterion);
	}

	protected static Criteria.Criterion getSearchCriterion(String campo,String valor, String condicion){
        Criteria criteria =  new Criteria();
        Criteria.Criterion criterion = null;

			if(campo.equals("all") || campo.equals(BaseManager.campoToLowerCase(ReparacionPeer.ID)))
		{
			if(condicion.equals(BaseQuery.SingleQuery.EQUAL_CONDITION))
				criterion = TorqueUtils.addOrEqualCriteria(criterion,ReparacionPeer.ID,valor,true);
			else if (condicion.equals(BaseQuery.SingleQuery.LIKE_CONDITION))
				criterion = TorqueUtils.addOrLikeCriteria(criterion,ReparacionPeer.ID,valor,true);
			else if (condicion.equals(BaseQuery.SingleQuery.LESS_CONDITION))
				criterion = TorqueUtils.addOrLessCriteria(criterion,ReparacionPeer.ID,valor,true);
			else if (condicion.equals(BaseQuery.SingleQuery.GREATER_CONDITION))
				criterion = TorqueUtils.addOrGreaterCriteria(criterion,ReparacionPeer.ID,valor,true);
		}
			if(campo.equals("all") || campo.equals(BaseManager.campoToLowerCase(ReparacionPeer.KM)))
		{
			if(condicion.equals(BaseQuery.SingleQuery.EQUAL_CONDITION))
				criterion = TorqueUtils.addOrEqualCriteria(criterion,ReparacionPeer.KM,valor,true);
			else if (condicion.equals(BaseQuery.SingleQuery.LIKE_CONDITION))
				criterion = TorqueUtils.addOrLikeCriteria(criterion,ReparacionPeer.KM,valor,true);
			else if (condicion.equals(BaseQuery.SingleQuery.LESS_CONDITION))
				criterion = TorqueUtils.addOrLessCriteria(criterion,ReparacionPeer.KM,valor,true);
			else if (condicion.equals(BaseQuery.SingleQuery.GREATER_CONDITION))
				criterion = TorqueUtils.addOrGreaterCriteria(criterion,ReparacionPeer.KM,valor,true);
		}
			if(campo.equals("all") || campo.equals(BaseManager.campoToLowerCase(ReparacionPeer.DEPOSITO)))
		{
			if(condicion.equals(BaseQuery.SingleQuery.EQUAL_CONDITION))
				criterion = TorqueUtils.addOrEqualCriteria(criterion,ReparacionPeer.DEPOSITO,valor,true);
			else if (condicion.equals(BaseQuery.SingleQuery.LIKE_CONDITION))
				criterion = TorqueUtils.addOrLikeCriteria(criterion,ReparacionPeer.DEPOSITO,valor,true);
			else if (condicion.equals(BaseQuery.SingleQuery.LESS_CONDITION))
				criterion = TorqueUtils.addOrLessCriteria(criterion,ReparacionPeer.DEPOSITO,valor,true);
			else if (condicion.equals(BaseQuery.SingleQuery.GREATER_CONDITION))
				criterion = TorqueUtils.addOrGreaterCriteria(criterion,ReparacionPeer.DEPOSITO,valor,true);
		}
			if(campo.equals("all") || campo.equals(BaseManager.campoToLowerCase(ReparacionPeer.FECHA_ENTRADA)))
		{
			if(condicion.equals(BaseQuery.SingleQuery.EQUAL_CONDITION))
				criterion = TorqueUtils.addOrEqualCriteria(criterion,ReparacionPeer.FECHA_ENTRADA,valor,true);
			else if (condicion.equals(BaseQuery.SingleQuery.LIKE_CONDITION))
				criterion = TorqueUtils.addOrLikeCriteria(criterion,ReparacionPeer.FECHA_ENTRADA,valor,true);
			else if (condicion.equals(BaseQuery.SingleQuery.LESS_CONDITION))
				criterion = TorqueUtils.addOrLessCriteria(criterion,ReparacionPeer.FECHA_ENTRADA,valor,true);
			else if (condicion.equals(BaseQuery.SingleQuery.GREATER_CONDITION))
				criterion = TorqueUtils.addOrGreaterCriteria(criterion,ReparacionPeer.FECHA_ENTRADA,valor,true);
		}
			if(campo.equals("all") || campo.equals(BaseManager.campoToLowerCase(ReparacionPeer.FECHA_SALIDA)))
		{
			if(condicion.equals(BaseQuery.SingleQuery.EQUAL_CONDITION))
				criterion = TorqueUtils.addOrEqualCriteria(criterion,ReparacionPeer.FECHA_SALIDA,valor,true);
			else if (condicion.equals(BaseQuery.SingleQuery.LIKE_CONDITION))
				criterion = TorqueUtils.addOrLikeCriteria(criterion,ReparacionPeer.FECHA_SALIDA,valor,true);
			else if (condicion.equals(BaseQuery.SingleQuery.LESS_CONDITION))
				criterion = TorqueUtils.addOrLessCriteria(criterion,ReparacionPeer.FECHA_SALIDA,valor,true);
			else if (condicion.equals(BaseQuery.SingleQuery.GREATER_CONDITION))
				criterion = TorqueUtils.addOrGreaterCriteria(criterion,ReparacionPeer.FECHA_SALIDA,valor,true);
		}
			if(campo.equals("all") || campo.equals(BaseManager.campoToLowerCase(ReparacionPeer.OBSERVACION)))
		{
			if(condicion.equals(BaseQuery.SingleQuery.EQUAL_CONDITION))
				criterion = TorqueUtils.addOrEqualCriteria(criterion,ReparacionPeer.OBSERVACION,valor,true);
			else if (condicion.equals(BaseQuery.SingleQuery.LIKE_CONDITION))
				criterion = TorqueUtils.addOrLikeCriteria(criterion,ReparacionPeer.OBSERVACION,valor,true);
			else if (condicion.equals(BaseQuery.SingleQuery.LESS_CONDITION))
				criterion = TorqueUtils.addOrLessCriteria(criterion,ReparacionPeer.OBSERVACION,valor,true);
			else if (condicion.equals(BaseQuery.SingleQuery.GREATER_CONDITION))
				criterion = TorqueUtils.addOrGreaterCriteria(criterion,ReparacionPeer.OBSERVACION,valor,true);
		}
			if(campo.equals("all") || campo.equals(BaseManager.campoToLowerCase(ReparacionPeer.ESTADOPREVIO)))
		{
			if(condicion.equals(BaseQuery.SingleQuery.EQUAL_CONDITION))
				criterion = TorqueUtils.addOrEqualCriteria(criterion,ReparacionPeer.ESTADOPREVIO,valor,true);
			else if (condicion.equals(BaseQuery.SingleQuery.LIKE_CONDITION))
				criterion = TorqueUtils.addOrLikeCriteria(criterion,ReparacionPeer.ESTADOPREVIO,valor,true);
			else if (condicion.equals(BaseQuery.SingleQuery.LESS_CONDITION))
				criterion = TorqueUtils.addOrLessCriteria(criterion,ReparacionPeer.ESTADOPREVIO,valor,true);
			else if (condicion.equals(BaseQuery.SingleQuery.GREATER_CONDITION))
				criterion = TorqueUtils.addOrGreaterCriteria(criterion,ReparacionPeer.ESTADOPREVIO,valor,true);
		}
			if(campo.equals("all") || campo.equals(BaseManager.campoToLowerCase(ReparacionPeer.RESPONSABLE)))
		{
			if(condicion.equals(BaseQuery.SingleQuery.EQUAL_CONDITION))
				criterion = TorqueUtils.addOrEqualCriteria(criterion,ReparacionPeer.RESPONSABLE,valor,true);
			else if (condicion.equals(BaseQuery.SingleQuery.LIKE_CONDITION))
				criterion = TorqueUtils.addOrLikeCriteria(criterion,ReparacionPeer.RESPONSABLE,valor,true);
			else if (condicion.equals(BaseQuery.SingleQuery.LESS_CONDITION))
				criterion = TorqueUtils.addOrLessCriteria(criterion,ReparacionPeer.RESPONSABLE,valor,true);
			else if (condicion.equals(BaseQuery.SingleQuery.GREATER_CONDITION))
				criterion = TorqueUtils.addOrGreaterCriteria(criterion,ReparacionPeer.RESPONSABLE,valor,true);
		}
			if(campo.equals("all") || campo.equals(BaseManager.campoToLowerCase(ReparacionPeer.VEHICULO_ID)))
		{
			if(condicion.equals(BaseQuery.SingleQuery.EQUAL_CONDITION))
				criterion = TorqueUtils.addOrEqualCriteria(criterion,ReparacionPeer.VEHICULO_ID,valor,true);
			else if (condicion.equals(BaseQuery.SingleQuery.LIKE_CONDITION))
				criterion = TorqueUtils.addOrLikeCriteria(criterion,ReparacionPeer.VEHICULO_ID,valor,true);
			else if (condicion.equals(BaseQuery.SingleQuery.LESS_CONDITION))
				criterion = TorqueUtils.addOrLessCriteria(criterion,ReparacionPeer.VEHICULO_ID,valor,true);
			else if (condicion.equals(BaseQuery.SingleQuery.GREATER_CONDITION))
				criterion = TorqueUtils.addOrGreaterCriteria(criterion,ReparacionPeer.VEHICULO_ID,valor,true);
		}
			if(campo.equals("all") || campo.equals(BaseManager.campoToLowerCase(ReparacionPeer.IMPORTE)))
		{
			if(condicion.equals(BaseQuery.SingleQuery.EQUAL_CONDITION))
				criterion = TorqueUtils.addOrEqualCriteria(criterion,ReparacionPeer.IMPORTE,valor,true);
			else if (condicion.equals(BaseQuery.SingleQuery.LIKE_CONDITION))
				criterion = TorqueUtils.addOrLikeCriteria(criterion,ReparacionPeer.IMPORTE,valor,true);
			else if (condicion.equals(BaseQuery.SingleQuery.LESS_CONDITION))
				criterion = TorqueUtils.addOrLessCriteria(criterion,ReparacionPeer.IMPORTE,valor,true);
			else if (condicion.equals(BaseQuery.SingleQuery.GREATER_CONDITION))
				criterion = TorqueUtils.addOrGreaterCriteria(criterion,ReparacionPeer.IMPORTE,valor,true);
		}
			if(campo.equals("all") || campo.equals(BaseManager.campoToLowerCase(ReparacionPeer.ESTADO)))
		{
			if(condicion.equals(BaseQuery.SingleQuery.EQUAL_CONDITION))
				criterion = TorqueUtils.addOrEqualCriteria(criterion,ReparacionPeer.ESTADO,valor,true);
			else if (condicion.equals(BaseQuery.SingleQuery.LIKE_CONDITION))
				criterion = TorqueUtils.addOrLikeCriteria(criterion,ReparacionPeer.ESTADO,valor,true);
			else if (condicion.equals(BaseQuery.SingleQuery.LESS_CONDITION))
				criterion = TorqueUtils.addOrLessCriteria(criterion,ReparacionPeer.ESTADO,valor,true);
			else if (condicion.equals(BaseQuery.SingleQuery.GREATER_CONDITION))
				criterion = TorqueUtils.addOrGreaterCriteria(criterion,ReparacionPeer.ESTADO,valor,true);
		}
									if(campo.equals("all") || campo.equals(BaseManager.campoToLowerCase(VehiculoPeer.ID)))
		{
			if(condicion.equals(BaseQuery.SingleQuery.EQUAL_CONDITION))
				criterion = TorqueUtils.addOrEqualCriteria(criterion,VehiculoPeer.ID,valor,true);
			else if (condicion.equals(BaseQuery.SingleQuery.LIKE_CONDITION))
				criterion = TorqueUtils.addOrLikeCriteria(criterion,VehiculoPeer.ID,valor,true);
			else if (condicion.equals(BaseQuery.SingleQuery.LESS_CONDITION))
				criterion = TorqueUtils.addOrLessCriteria(criterion,VehiculoPeer.ID,valor,true);
			else if (condicion.equals(BaseQuery.SingleQuery.GREATER_CONDITION))
				criterion = TorqueUtils.addOrGreaterCriteria(criterion,VehiculoPeer.ID,valor,true);
		}
					if(campo.equals("all") || campo.equals(BaseManager.campoToLowerCase(VehiculoPeer.MODELO_ID)))
		{
			if(condicion.equals(BaseQuery.SingleQuery.EQUAL_CONDITION))
				criterion = TorqueUtils.addOrEqualCriteria(criterion,VehiculoPeer.MODELO_ID,valor,true);
			else if (condicion.equals(BaseQuery.SingleQuery.LIKE_CONDITION))
				criterion = TorqueUtils.addOrLikeCriteria(criterion,VehiculoPeer.MODELO_ID,valor,true);
			else if (condicion.equals(BaseQuery.SingleQuery.LESS_CONDITION))
				criterion = TorqueUtils.addOrLessCriteria(criterion,VehiculoPeer.MODELO_ID,valor,true);
			else if (condicion.equals(BaseQuery.SingleQuery.GREATER_CONDITION))
				criterion = TorqueUtils.addOrGreaterCriteria(criterion,VehiculoPeer.MODELO_ID,valor,true);
		}
					if(campo.equals("all") || campo.equals(BaseManager.campoToLowerCase(VehiculoPeer.VERSION)))
		{
			if(condicion.equals(BaseQuery.SingleQuery.EQUAL_CONDITION))
				criterion = TorqueUtils.addOrEqualCriteria(criterion,VehiculoPeer.VERSION,valor,true);
			else if (condicion.equals(BaseQuery.SingleQuery.LIKE_CONDITION))
				criterion = TorqueUtils.addOrLikeCriteria(criterion,VehiculoPeer.VERSION,valor,true);
			else if (condicion.equals(BaseQuery.SingleQuery.LESS_CONDITION))
				criterion = TorqueUtils.addOrLessCriteria(criterion,VehiculoPeer.VERSION,valor,true);
			else if (condicion.equals(BaseQuery.SingleQuery.GREATER_CONDITION))
				criterion = TorqueUtils.addOrGreaterCriteria(criterion,VehiculoPeer.VERSION,valor,true);
		}
					if(campo.equals("all") || campo.equals(BaseManager.campoToLowerCase(VehiculoPeer.MATRICULA)))
		{
			if(condicion.equals(BaseQuery.SingleQuery.EQUAL_CONDITION))
				criterion = TorqueUtils.addOrEqualCriteria(criterion,VehiculoPeer.MATRICULA,valor,true);
			else if (condicion.equals(BaseQuery.SingleQuery.LIKE_CONDITION))
				criterion = TorqueUtils.addOrLikeCriteria(criterion,VehiculoPeer.MATRICULA,valor,true);
			else if (condicion.equals(BaseQuery.SingleQuery.LESS_CONDITION))
				criterion = TorqueUtils.addOrLessCriteria(criterion,VehiculoPeer.MATRICULA,valor,true);
			else if (condicion.equals(BaseQuery.SingleQuery.GREATER_CONDITION))
				criterion = TorqueUtils.addOrGreaterCriteria(criterion,VehiculoPeer.MATRICULA,valor,true);
		}
					if(campo.equals("all") || campo.equals(BaseManager.campoToLowerCase(VehiculoPeer.CLIENTE_ID)))
		{
			if(condicion.equals(BaseQuery.SingleQuery.EQUAL_CONDITION))
				criterion = TorqueUtils.addOrEqualCriteria(criterion,VehiculoPeer.CLIENTE_ID,valor,true);
			else if (condicion.equals(BaseQuery.SingleQuery.LIKE_CONDITION))
				criterion = TorqueUtils.addOrLikeCriteria(criterion,VehiculoPeer.CLIENTE_ID,valor,true);
			else if (condicion.equals(BaseQuery.SingleQuery.LESS_CONDITION))
				criterion = TorqueUtils.addOrLessCriteria(criterion,VehiculoPeer.CLIENTE_ID,valor,true);
			else if (condicion.equals(BaseQuery.SingleQuery.GREATER_CONDITION))
				criterion = TorqueUtils.addOrGreaterCriteria(criterion,VehiculoPeer.CLIENTE_ID,valor,true);
		}
					if(campo.equals("all") || campo.equals(BaseManager.campoToLowerCase(VehiculoPeer.CHASIS_ID)))
		{
			if(condicion.equals(BaseQuery.SingleQuery.EQUAL_CONDITION))
				criterion = TorqueUtils.addOrEqualCriteria(criterion,VehiculoPeer.CHASIS_ID,valor,true);
			else if (condicion.equals(BaseQuery.SingleQuery.LIKE_CONDITION))
				criterion = TorqueUtils.addOrLikeCriteria(criterion,VehiculoPeer.CHASIS_ID,valor,true);
			else if (condicion.equals(BaseQuery.SingleQuery.LESS_CONDITION))
				criterion = TorqueUtils.addOrLessCriteria(criterion,VehiculoPeer.CHASIS_ID,valor,true);
			else if (condicion.equals(BaseQuery.SingleQuery.GREATER_CONDITION))
				criterion = TorqueUtils.addOrGreaterCriteria(criterion,VehiculoPeer.CHASIS_ID,valor,true);
		}
					if(campo.equals("all") || campo.equals(BaseManager.campoToLowerCase(VehiculoPeer.MOTOR_ID)))
		{
			if(condicion.equals(BaseQuery.SingleQuery.EQUAL_CONDITION))
				criterion = TorqueUtils.addOrEqualCriteria(criterion,VehiculoPeer.MOTOR_ID,valor,true);
			else if (condicion.equals(BaseQuery.SingleQuery.LIKE_CONDITION))
				criterion = TorqueUtils.addOrLikeCriteria(criterion,VehiculoPeer.MOTOR_ID,valor,true);
			else if (condicion.equals(BaseQuery.SingleQuery.LESS_CONDITION))
				criterion = TorqueUtils.addOrLessCriteria(criterion,VehiculoPeer.MOTOR_ID,valor,true);
			else if (condicion.equals(BaseQuery.SingleQuery.GREATER_CONDITION))
				criterion = TorqueUtils.addOrGreaterCriteria(criterion,VehiculoPeer.MOTOR_ID,valor,true);
		}
					if(campo.equals("all") || campo.equals(BaseManager.campoToLowerCase(VehiculoPeer.COLOR)))
		{
			if(condicion.equals(BaseQuery.SingleQuery.EQUAL_CONDITION))
				criterion = TorqueUtils.addOrEqualCriteria(criterion,VehiculoPeer.COLOR,valor,true);
			else if (condicion.equals(BaseQuery.SingleQuery.LIKE_CONDITION))
				criterion = TorqueUtils.addOrLikeCriteria(criterion,VehiculoPeer.COLOR,valor,true);
			else if (condicion.equals(BaseQuery.SingleQuery.LESS_CONDITION))
				criterion = TorqueUtils.addOrLessCriteria(criterion,VehiculoPeer.COLOR,valor,true);
			else if (condicion.equals(BaseQuery.SingleQuery.GREATER_CONDITION))
				criterion = TorqueUtils.addOrGreaterCriteria(criterion,VehiculoPeer.COLOR,valor,true);
		}
					if(campo.equals("all") || campo.equals(BaseManager.campoToLowerCase(VehiculoPeer.FECHA_MATRICULACION)))
		{
			if(condicion.equals(BaseQuery.SingleQuery.EQUAL_CONDITION))
				criterion = TorqueUtils.addOrEqualCriteria(criterion,VehiculoPeer.FECHA_MATRICULACION,valor,true);
			else if (condicion.equals(BaseQuery.SingleQuery.LIKE_CONDITION))
				criterion = TorqueUtils.addOrLikeCriteria(criterion,VehiculoPeer.FECHA_MATRICULACION,valor,true);
			else if (condicion.equals(BaseQuery.SingleQuery.LESS_CONDITION))
				criterion = TorqueUtils.addOrLessCriteria(criterion,VehiculoPeer.FECHA_MATRICULACION,valor,true);
			else if (condicion.equals(BaseQuery.SingleQuery.GREATER_CONDITION))
				criterion = TorqueUtils.addOrGreaterCriteria(criterion,VehiculoPeer.FECHA_MATRICULACION,valor,true);
		}
					if(campo.equals("all") || campo.equals(BaseManager.campoToLowerCase(VehiculoPeer.FECHA_REVISION)))
		{
			if(condicion.equals(BaseQuery.SingleQuery.EQUAL_CONDITION))
				criterion = TorqueUtils.addOrEqualCriteria(criterion,VehiculoPeer.FECHA_REVISION,valor,true);
			else if (condicion.equals(BaseQuery.SingleQuery.LIKE_CONDITION))
				criterion = TorqueUtils.addOrLikeCriteria(criterion,VehiculoPeer.FECHA_REVISION,valor,true);
			else if (condicion.equals(BaseQuery.SingleQuery.LESS_CONDITION))
				criterion = TorqueUtils.addOrLessCriteria(criterion,VehiculoPeer.FECHA_REVISION,valor,true);
			else if (condicion.equals(BaseQuery.SingleQuery.GREATER_CONDITION))
				criterion = TorqueUtils.addOrGreaterCriteria(criterion,VehiculoPeer.FECHA_REVISION,valor,true);
		}
					if(campo.equals("all") || campo.equals(BaseManager.campoToLowerCase(VehiculoPeer.OBSERVACION)))
		{
			if(condicion.equals(BaseQuery.SingleQuery.EQUAL_CONDITION))
				criterion = TorqueUtils.addOrEqualCriteria(criterion,VehiculoPeer.OBSERVACION,valor,true);
			else if (condicion.equals(BaseQuery.SingleQuery.LIKE_CONDITION))
				criterion = TorqueUtils.addOrLikeCriteria(criterion,VehiculoPeer.OBSERVACION,valor,true);
			else if (condicion.equals(BaseQuery.SingleQuery.LESS_CONDITION))
				criterion = TorqueUtils.addOrLessCriteria(criterion,VehiculoPeer.OBSERVACION,valor,true);
			else if (condicion.equals(BaseQuery.SingleQuery.GREATER_CONDITION))
				criterion = TorqueUtils.addOrGreaterCriteria(criterion,VehiculoPeer.OBSERVACION,valor,true);
		}
						
		return criterion;
	}

	public static final ReparacionGroupBean getReparacions() {
    	return BaseReparacionManager.getReparacions(false);
	}

	public static final ReparacionGroupBean getReparacions(boolean paginado) {
    	return BaseReparacionManager.getReparacions(new Criteria(), paginado,0);
	}

	public static final ReparacionGroupBean getReparacions(Criteria c) {
		return BaseReparacionManager.getReparacions(c,false,0);
	}

	public static final ReparacionGroupBean getReparacions(Criteria criteria,boolean paginado, int pagina) {
		ReparacionGroupBean objReparacionGroupBean = new ReparacionGroupBean();
		objReparacionGroupBean.setPaginaActual(pagina);
		objReparacionGroupBean.setReparacions(criteria, paginado);
		return objReparacionGroupBean;
	}

							
	public static final Reparacion getReparacion(int id_Id) {
		Criteria c = new Criteria();
			c.add(ReparacionPeer.ID, id_Id);
			return BaseReparacionManager.ReparacionsGroupBean2Reparacion(BaseReparacionManager.getReparacions(c));
	}

	public static final Reparacion ReparacionsGroupBean2Reparacion(ReparacionGroupBean obj){
		if(obj.size() == 1)
			return obj.getReparacion(0);
		else
			return null;
	}

	private static void updateReparacionAttribute(int id_Id, String valor, String campo) throws Exception
	{
		Reparacion obj = BaseReparacionManager.getReparacion(id_Id);
			if(campo.equals(ReparacionPeer.ID))
					obj.setId(Integer.parseInt(valor)); //int
					if(campo.equals(ReparacionPeer.KM))
					obj.setKm(Integer.parseInt(valor)); //int
					if(campo.equals(ReparacionPeer.DEPOSITO))
					obj.setDeposito(valor); //String
					if(campo.equals(ReparacionPeer.FECHA_ENTRADA))
					obj.setFechaEntrada(valor); //String
					if(campo.equals(ReparacionPeer.FECHA_SALIDA))
					obj.setFechaSalida(valor); //String
					if(campo.equals(ReparacionPeer.OBSERVACION))
					obj.setObs(valor); //String
					if(campo.equals(ReparacionPeer.ESTADOPREVIO))
					obj.setEstadoPrevio(valor); //String
					if(campo.equals(ReparacionPeer.RESPONSABLE))
					obj.setResponsable(valor); //String
					if(campo.equals(ReparacionPeer.VEHICULO_ID))
					obj.setVehiculoId(Integer.parseInt(valor)); //int
					if(campo.equals(ReparacionPeer.IMPORTE))
					obj.setImporte(Double.parseDouble(valor)); //double
					if(campo.equals(ReparacionPeer.ESTADO))
					obj.setEstado(Integer.parseInt(valor)); //int
					obj.save();
	}

	public static void updateId(int id_Id, String valor) throws Exception
	{
		updateReparacionAttribute(id_Id, valor, ReparacionPeer.ID);
	}
	public static void updateKm(int id_Id, String valor) throws Exception
	{
		updateReparacionAttribute(id_Id, valor, ReparacionPeer.KM);
	}
	public static void updateDeposito(int id_Id, String valor) throws Exception
	{
		updateReparacionAttribute(id_Id, valor, ReparacionPeer.DEPOSITO);
	}
	public static void updateFechaEntrada(int id_Id, String valor) throws Exception
	{
		updateReparacionAttribute(id_Id, valor, ReparacionPeer.FECHA_ENTRADA);
	}
	public static void updateFechaSalida(int id_Id, String valor) throws Exception
	{
		updateReparacionAttribute(id_Id, valor, ReparacionPeer.FECHA_SALIDA);
	}
	public static void updateObs(int id_Id, String valor) throws Exception
	{
		updateReparacionAttribute(id_Id, valor, ReparacionPeer.OBSERVACION);
	}
	public static void updateEstadoPrevio(int id_Id, String valor) throws Exception
	{
		updateReparacionAttribute(id_Id, valor, ReparacionPeer.ESTADOPREVIO);
	}
	public static void updateResponsable(int id_Id, String valor) throws Exception
	{
		updateReparacionAttribute(id_Id, valor, ReparacionPeer.RESPONSABLE);
	}
	public static void updateVehiculoId(int id_Id, String valor) throws Exception
	{
		updateReparacionAttribute(id_Id, valor, ReparacionPeer.VEHICULO_ID);
	}
	public static void updateImporte(int id_Id, String valor) throws Exception
	{
		updateReparacionAttribute(id_Id, valor, ReparacionPeer.IMPORTE);
	}
	public static void updateEstado(int id_Id, String valor) throws Exception
	{
		updateReparacionAttribute(id_Id, valor, ReparacionPeer.ESTADO);
	}

				public void addJoins(Criteria criteria)
	{
																																																	criteria.addJoin(ReparacionPeer.VEHICULO_ID,VehiculoPeer.ID);
															}
	

  public static void deleteReparacion(int id_Id) throws TorqueException
  {
  	ReparacionPeer.doDelete(ReparacionManager.getReparacion(id_Id));
  }

  public static Reparacion addUpdateReparacion(Reparacion obj) throws TorqueException
  {
	ReparacionGroupBean gb = new ReparacionGroupBean();
	gb.setElemento(obj);
	gb.save();
	return obj;
  }

}

